<?xml version="1.0"?>
<rss version="2.0">
<channel>
<title>Karl Arao's TiddlyWiki</title>
<link>http://karlarao.tiddlyspot.com</link>
<description></description>
<language>en</language>
<copyright>Copyright 2021 YourName</copyright>
<pubDate>Sat, 10 Apr 2021 16:37:35 GMT</pubDate>
<lastBuildDate>Sat, 10 Apr 2021 16:37:35 GMT</lastBuildDate>
<docs>http://blogs.law.harvard.edu/tech/rss</docs>
<generator>TiddlyWiki 2.5.0</generator>
<item>
<title>Elapsed-AvgMinMax , ash elap - shark fin</title>
<description>&lt;div class=&quot;dcTOC&quot;&gt;&lt;a class=&quot;toggleButton&quot; title=&quot;show/collapse table of contents&quot; href=&quot;javascript:;&quot;&gt;/* Table of Contents */&lt;/a&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' ash elap - shark fin ', event)&quot;&gt; ash elap - shark fin &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' Making use of STDDEV on elapsed time', event)&quot;&gt; Making use of STDDEV on elapsed time&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; ash elap - shark fin &lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;br&gt;tableau calculated field &lt;br&gt;&lt;pre&gt;DATEDIFF('second',MIN([TMS]),max([TM]))


Above calculates the diff of these two columns to form a shark fin, bigger fins mean longer running query. Then you can use the ASH dimensions to slice and dice the data
min(SQL_EXEC_START), max(SAMPLE_TIME)
&lt;/pre&gt;&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/XqWgFxM.jpg&quot; title=&quot;SHIFT-CLICK=show full size, CTRL-CLICK=restore initial size&quot; style=&quot;width: 100%; height: 100%; cursor: move;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://i.imgur.com/OzlGpU4.png&quot; title=&quot;SHIFT-CLICK=show full size, CTRL-CLICK=restore initial size&quot; style=&quot;width: 100%; height: 100%; cursor: move;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dboptimizer.com/2011/05/04/sql-execution-times-from-ash/&quot; href=&quot;http://dboptimizer.com/2011/05/04/sql-execution-times-from-ash/&quot; class=&quot;externalLink&quot;&gt;http://dboptimizer.com/2011/05/04/sql-execution-times-from-ash/&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dboptimizer.com/2011/05/06/sql-timings-for-ash-ii/&quot; href=&quot;http://dboptimizer.com/2011/05/06/sql-timings-for-ash-ii/&quot; class=&quot;externalLink&quot;&gt;http://dboptimizer.com/2011/05/06/sql-timings-for-ash-ii/&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dboptimizer.com/2011/05/06/sql-ash-timings-iii/&quot; href=&quot;http://dboptimizer.com/2011/05/06/sql-ash-timings-iii/&quot; class=&quot;externalLink&quot;&gt;http://dboptimizer.com/2011/05/06/sql-ash-timings-iii/&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;&lt;ul&gt;&lt;li&gt; this is pretty awesome way of characterizing the response times of &lt;a tiddlylink=&quot;SQLs&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQLs&quot; href=&quot;http://karlarao.tiddlyspot.com#SQLs&quot; class=&quot;externalLink null&quot;&gt;SQLs&lt;/a&gt;.. another way of doing this is through 10046 trace and using the Mr. Tools, and there are so many things you can do with both of the tools, another thing I'm interested in (although not related to this tiddler) is getting the IO size distribution from the 10046 along side it is the data coming from ASH which is basically pulling the data from the p1,p2,p3 values of the IO events.. &lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;&lt;pre&gt;[oracle@oel5-11g bin]$ cat ash_test.sh
export DATE=$(date +%Y%m%d%H%M%S%N)

sqlplus &quot;/ as sysdba&quot; &amp;lt;&amp;lt;EOF
set timing on
set echo on
spool all_nodes_full_table_scan_$DATE.log

select /* ash_elapsed */ * from
(select owner, object_name from karltest
where owner = 'SYSTEM'
and object_type = 'TABLE'
union
select owner, object_name from karltest
where owner = 'SYSTEM'
and object_type = 'INDEX')
order by object_name
/

spool off
exit
EOF
[oracle@oel5-11g bin]$
[oracle@oel5-11g bin]$ cat loadtest.sh
(( n=0 ))
while (( n&amp;lt;$1 ));do
(( n=n+1 ))
sh ash_test.sh &amp;amp;
done
&lt;/pre&gt;&lt;br&gt;&lt;pre&gt;[oracle@oel5-11g bin]$ ls -ltr
total 1468
-rwxr-xr-x 1 oracle oinstall    107 Apr 23 08:21 startdb.sh
-rwxr-xr-x 1 oracle oinstall    118 Apr 23 08:21 stopdb.sh
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:12 all_nodes_full_table_scan_20110505181225583938000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508275739000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508273773000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508273060000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508269189000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508265790000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508262532000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508259253000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508256596000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508251337000.log
-rw-r--r-- 1 oracle oinstall 127675 May  5 18:17 all_nodes_full_table_scan_20110505181508245849000.log
-rw-r--r-- 1 oracle oinstall     64 May  5 19:23 loadtest.sh
-rw-r--r-- 1 oracle oinstall    397 May  5 19:23 ash_test.sh
&lt;/pre&gt;&lt;br&gt;&lt;pre&gt;[oracle@oel5-11g bin]$ cat *log | grep Elapsed
Elapsed: 00:00:15.00
Elapsed: 00:02:00.41
Elapsed: 00:02:00.10
Elapsed: 00:02:00.03
Elapsed: 00:02:00.15
Elapsed: 00:02:00.32
Elapsed: 00:02:00.08
Elapsed: 00:02:00.20
Elapsed: 00:01:59.99
Elapsed: 00:02:00.31
Elapsed: 00:02:00.11
&lt;/pre&gt;&lt;br&gt;&lt;pre&gt; SELECT /* example */ substr(sql_text, 1, 80) sql_text,
           sql_id, 
	    hash_value, address, child_number, plan_hash_value, FIRST_LOAD_TIME
      FROM v$sql
     WHERE 
	--sql_id = '6wps6tju5b8tq'
	-- hash_value = 1481129178
	sql_text LIKE '%ash_elapsed%'
       AND sql_text NOT LIKE '%example%' 
      order by first_load_time; 

SQL_TEXT                                                                                                                                                            SQL_ID        HASH_VALUE ADDRESS           CHILD_NUMBER PLAN_HASH_VALUE FIRST_LOAD_TIME
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ------------- ---------- ---------------- ------------ --------------- ----------------------------------------------------------------------------
select /* ash_elapsed */ * from (select owner, object_name from karltest where o                                                                                    gy6j5kg641saa 3426804042 000000006C523480             0      1959977140 2011-05-05/18:12:25
&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;pre&gt;select sql_id, 
      run_time run_time_timestamp, 
 (EXTRACT(HOUR FROM run_time) * 3600
                    + EXTRACT(MINUTE FROM run_time) * 60 
                    + EXTRACT(SECOND FROM run_time)) run_time_sec
from  (
select 
       sql_id,
       max(sample_time - sql_exec_start) run_time 
from 
       dba_hist_active_sess_history 
where
       sql_exec_start is not null 
group by sql_id,SQL_EXEC_ID
order by sql_id 
)
-- where rownum &amp;lt; 100
where sql_id = 'gy6j5kg641saa'
order by sql_id, run_time desc
/

SQL_ID        RUN_TIME_TIMESTAMP                                                          RUN_TIME_SEC
------------- --------------------------------------------------------------------------- ------------
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:54.575                                                          114.575
gy6j5kg641saa +000000000 00:01:53.575                                                          113.575
gy6j5kg641saa +000000000 00:01:53.575                                                          113.575
gy6j5kg641saa +000000000 00:00:11.052                                                           11.052

11 rows selected.
&lt;/pre&gt;&lt;br&gt;&lt;pre&gt;select sql_id,  
		count(*),
        round(avg(EXTRACT(HOUR FROM run_time) * 3600
                    + EXTRACT(MINUTE FROM run_time) * 60 
                    + EXTRACT(SECOND FROM run_time)),2) avg , 
        round(min(EXTRACT(HOUR FROM run_time) * 3600
                    + EXTRACT(MINUTE FROM run_time) * 60 
                    + EXTRACT(SECOND FROM run_time)),2) min , 
        round(max(EXTRACT(HOUR FROM run_time) * 3600
                    + EXTRACT(MINUTE FROM run_time) * 60 
                    + EXTRACT(SECOND FROM run_time)),2) max 
from  (
        select 
               sql_id,
               max(sample_time - sql_exec_start) run_time
        from 
               dba_hist_active_sess_history 
        where
               sql_exec_start is not null 
               and sql_id = 'gy6j5kg641saa'
        group by sql_id,SQL_EXEC_ID
        order by sql_id 
       )
-- where rownum &amp;lt; 100
group by sql_id
order by avg desc
/

SQL_ID          COUNT(*)      AVG        MIN        MAX
------------- ---------- -------- ---------- ----------
gy6j5kg641saa         11  104.980      11.05     114.58

&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; Also verify the data points and avg min max in Excel &lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/_F2x5WXOJ6Q8/TcKKM6OwQNI/AAAAAAAABQQ/6AunDw4VDvI/avgminmax.png&quot; title=&quot;picturename&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;SQL&amp;gt; select count(*) from karltest;&lt;br&gt;&lt;br&gt;  COUNT(*)&lt;br&gt;&lt;hr&gt;   2215968&lt;br&gt;&lt;br&gt;&lt;br&gt;SQL&amp;gt; insert into karltest select * from dba_objects;&lt;br&gt;&lt;br&gt;69249 rows created.&lt;br&gt;&lt;br&gt;Elapsed: 00:00:00.86&lt;br&gt;SQL&amp;gt; commit;&lt;br&gt;&lt;br&gt;Commit complete.&lt;br&gt;&lt;br&gt;SQL&amp;gt; select count(*) from karltest;&lt;br&gt;&lt;br&gt;  COUNT(*)&lt;br&gt;&lt;hr&gt;     69249&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;[oracle@oel5-11g bin]$ cat *log | grep Elapsed&lt;br&gt;Elapsed: 00:00:00.67&lt;br&gt;Elapsed: 00:00:00.35&lt;br&gt;Elapsed: 00:00:01.16&lt;br&gt;Elapsed: 00:00:00.33&lt;br&gt;Elapsed: 00:00:00.35&lt;br&gt;Elapsed: 00:00:00.31&lt;br&gt;Elapsed: 00:00:00.31&lt;br&gt;Elapsed: 00:00:01.32&lt;br&gt;Elapsed: 00:00:00.34&lt;br&gt;Elapsed: 00:00:00.31&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; SELECT /* example */ substr(sql_text, 1, 80) sql_text,&lt;br&gt;           sql_id, &lt;br&gt;	    hash_value, address, child_number, plan_hash_value, &lt;a tiddlylink=&quot;FIRST_LOAD_TIME&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; href=&quot;http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; class=&quot;externalLink null&quot;&gt;FIRST_LOAD_TIME&lt;/a&gt;&lt;br&gt;      FROM v$sql&lt;br&gt;     WHERE &lt;br&gt;	&lt;strike&gt;sql_id = '6wps6tju5b8tq'&lt;br&gt;	&lt;/strike&gt; hash_value = 1481129178&lt;br&gt;	sql_text LIKE '%ash_elapsed2%'&lt;br&gt;       AND sql_text NOT LIKE '%example%' &lt;br&gt;      order by first_load_time; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;SQL&amp;gt;  SELECT /* example */ substr(sql_text, 1, 80) sql_text,&lt;br&gt;  2             sql_id,&lt;br&gt;  3         hash_value, address, child_number, plan_hash_value, &lt;a tiddlylink=&quot;FIRST_LOAD_TIME&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; href=&quot;http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; class=&quot;externalLink null&quot;&gt;FIRST_LOAD_TIME&lt;/a&gt;&lt;br&gt;  4        FROM v$sql&lt;br&gt;  5       WHERE&lt;br&gt;  6     &lt;strike&gt;sql_id = '6wps6tju5b8tq'&lt;br&gt;  7     &lt;/strike&gt; hash_value = 1481129178&lt;br&gt;  8     sql_text LIKE '%ash_elapsed2%'&lt;br&gt;  9         AND sql_text NOT LIKE '%example%'&lt;br&gt;      order by first_load_time;  10&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;SQL_TEXT&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQL_TEXT&quot; href=&quot;http://karlarao.tiddlyspot.com#SQL_TEXT&quot; class=&quot;externalLink null&quot;&gt;SQL_TEXT&lt;/a&gt;                                                                                                                                                            &lt;a tiddlylink=&quot;SQL_ID&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQL_ID&quot; href=&quot;http://karlarao.tiddlyspot.com#SQL_ID&quot; class=&quot;externalLink null&quot;&gt;SQL_ID&lt;/a&gt;        &lt;a tiddlylink=&quot;HASH_VALUE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#HASH_VALUE&quot; href=&quot;http://karlarao.tiddlyspot.com#HASH_VALUE&quot; class=&quot;externalLink null&quot;&gt;HASH_VALUE&lt;/a&gt; ADDRESS           &lt;a tiddlylink=&quot;CHILD_NUMBER&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#CHILD_NUMBER&quot; href=&quot;http://karlarao.tiddlyspot.com#CHILD_NUMBER&quot; class=&quot;externalLink null&quot;&gt;CHILD_NUMBER&lt;/a&gt; &lt;a tiddlylink=&quot;PLAN_HASH_VALUE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PLAN_HASH_VALUE&quot; href=&quot;http://karlarao.tiddlyspot.com#PLAN_HASH_VALUE&quot; class=&quot;externalLink null&quot;&gt;PLAN_HASH_VALUE&lt;/a&gt; &lt;a tiddlylink=&quot;FIRST_LOAD_TIME&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; href=&quot;http://karlarao.tiddlyspot.com#FIRST_LOAD_TIME&quot; class=&quot;externalLink null&quot;&gt;FIRST_LOAD_TIME&lt;/a&gt;&lt;br&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt; &lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;- &lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;span&gt;—&lt;/span&gt; &lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt; &lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt; &lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;- &lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;strike&gt;&lt;/strike&gt;&lt;span&gt;—&lt;/span&gt;&lt;br&gt;select /* ash_elapsed2 */ * from (select owner, object_name from karltest where                                                                                     4bkcftyvj2j6p 3071362261 000000006C776858             0      1959977140 2011-05-05/19:59:58&lt;br&gt;&lt;br&gt;&lt;br&gt;SQL&amp;gt; BEGIN&lt;br&gt;  &lt;a tiddlylink=&quot;DBMS_WORKLOAD_REPOSITORY&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#DBMS_WORKLOAD_REPOSITORY&quot; href=&quot;http://karlarao.tiddlyspot.com#DBMS_WORKLOAD_REPOSITORY&quot; class=&quot;externalLink null&quot;&gt;DBMS_WORKLOAD_REPOSITORY&lt;/a&gt;.&lt;a tiddlylink=&quot;CREATE_SNAPSHOT&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#CREATE_SNAPSHOT&quot; href=&quot;http://karlarao.tiddlyspot.com#CREATE_SNAPSHOT&quot; class=&quot;externalLink null&quot;&gt;CREATE_SNAPSHOT&lt;/a&gt; ();&lt;br&gt;END;&lt;br&gt;/  2    3    4&lt;br&gt;&lt;br&gt;PL/SQL procedure successfully completed.&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;SQL&amp;gt; select sql_id,&lt;br&gt;  2        run_time run_time_timestamp,&lt;br&gt;  3   (EXTRACT(HOUR FROM run_time) * 3600&lt;br&gt;                    + EXTRACT(MINUTE FROM run_time) * 60&lt;br&gt;  4    5                      + EXTRACT(SECOND FROM run_time)) run_time_sec&lt;br&gt;  6  from  (&lt;br&gt;  7  select&lt;br&gt;  8         sql_id,&lt;br&gt;  9         max(sample_time - sql_exec_start) run_time&lt;br&gt; 10  from&lt;br&gt; 11         dba_hist_active_sess_history&lt;br&gt; 12  where&lt;br&gt; 13         sql_exec_start is not null&lt;br&gt; 14  group by sql_id,&lt;a tiddlylink=&quot;SQL_EXEC_ID&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQL_EXEC_ID&quot; href=&quot;http://karlarao.tiddlyspot.com#SQL_EXEC_ID&quot; class=&quot;externalLink null&quot;&gt;SQL_EXEC_ID&lt;/a&gt;&lt;br&gt;order by sql_id&lt;br&gt; 15   16  )&lt;br&gt;&lt;span&gt;—&lt;/span&gt; where rownum &amp;lt; 100&lt;br&gt; 17   18  where sql_id = '4bkcftyvj2j6p'&lt;br&gt; 19  order by sql_id, run_time desc&lt;br&gt;/ 20&lt;br&gt;&lt;br&gt;no rows selected&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; Making use of STDDEV on elapsed time&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;br&gt;This gets the avg,min,max,stddev on a specific time window.. then drill down further with a join on dba_hist_active_sess_history with particular filters (module, user, etc.)&lt;br&gt;&lt;br&gt;&lt;pre&gt;
-- CREATE A TEMP TABLE THAT SHOWS AVG,MIN,MAX,STDDEV RESPONSE TIME OF SQLS    
define begin='03/08/2012 14:40'
define end='03/08/2012 14:45'


SYS@fsprd2&amp;gt; create table karl_sql_id2 as
select sql_id,
  2    3                  count(*) count,
  4          round(avg(EXTRACT(HOUR FROM run_time) * 3600
  5                      + EXTRACT(MINUTE FROM run_time) * 60
  6                      + EXTRACT(SECOND FROM run_time)),2) avg ,
  7          round(min(EXTRACT(HOUR FROM run_time) * 3600
  8                      + EXTRACT(MINUTE FROM run_time) * 60
  9                      + EXTRACT(SECOND FROM run_time)),2) min ,
10          round(max(EXTRACT(HOUR FROM run_time) * 3600
11                      + EXTRACT(MINUTE FROM run_time) * 60
12                      + EXTRACT(SECOND FROM run_time)),2) max,
13          round(stddev(EXTRACT(HOUR FROM run_time) * 3600
14                      + EXTRACT(MINUTE FROM run_time) * 60
15                      + EXTRACT(SECOND FROM run_time)),2) stddev
16  from  (
17          select
18                 sql_id,
19                 max(sample_time - sql_exec_start) run_time
20          from
21                 dba_hist_active_sess_history
22          where
23                 sql_exec_start is not null
24                                         and sample_time
25                                         between to_date('&amp;amp;begin', 'MM/DD/YY HH24:MI:SS')
26                                         and to_date('&amp;amp;end', 'MM/DD/YY HH24:MI:SS')
27          group by sql_id,SQL_EXEC_ID
28          order by sql_id
29         )
30  group by sql_id
31  order by avg desc
32  /

Table created.


define _start_time='03/08/2012 14:40'
define _end_time='03/08/2012 14:45'


SYS@fsprd2&amp;gt; select * from karl_sql_id2
where sql_id in
  2    3        (select sql_id from
  4     dba_hist_active_sess_history
  5     where sample_time
  6                                            between to_date('&amp;amp;_start_time', 'MM/DD/YY HH24:MI')
  7                                            and to_date('&amp;amp;_end_time', 'MM/DD/YY HH24:MI')
  8     and lower(module) like 'ex_%')
  9  order by stddev asc;

SQL_ID             COUNT        AVG        MIN        MAX     STDDEV
------------- ---------- ---------- ---------- ---------- ----------
aadkvg74cknvc          1         .8         .8         .8          0
c96tdmv2wu0mb          1        .81        .81        .81          0
03zk40yazk2cj          1        .81        .81        .81          0
89s2kmgjcyg08          1       1.96       1.96       1.96          0
cb5gq5xu04sbb          3        2.6       1.92       3.93       1.15
991y15af5jxx9          5       2.07        .96       5.93       2.16
c2fn0swka653f          6      18.94       9.99      28.99       7.28

7 rows selected.

&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
<category>ASH</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BElapsed-AvgMinMax%20%2C%20ash%20elap%20-%20shark%20fin%5D%5D</link>
<pubDate>Sat, 10 Apr 2021 16:37:32 GMT</pubDate>

</item>
<item>
<title>OCI hugepages, oracle cloud hugepages</title>
<description>&lt;br&gt;&lt;blockquote&gt;my experience: &lt;br&gt;&lt;ul&gt;&lt;li&gt; automatically configured in &lt;a tiddlylink=&quot;X8M&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#X8M&quot; href=&quot;http://karlarao.tiddlyspot.com#X8M&quot; class=&quot;externalLink null&quot;&gt;X8M&lt;/a&gt;&lt;/li&gt;&lt;li&gt; &lt;a tiddlylink=&quot;CDBs&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#CDBs&quot; href=&quot;http://karlarao.tiddlyspot.com#CDBs&quot; class=&quot;externalLink null&quot;&gt;CDBs&lt;/a&gt; are set to use_large_pages=ONLY &lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blog.pythian.com/hugepages-for-oracle-database-in-oracle-cloud/&quot; href=&quot;https://blog.pythian.com/hugepages-for-oracle-database-in-oracle-cloud/&quot; class=&quot;externalLink&quot;&gt;https://blog.pythian.com/hugepages-for-oracle-database-in-oracle-cloud/&lt;/a&gt;&lt;br&gt;</description>
<category>HugePages</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BOCI%20hugepages%2C%20oracle%20cloud%20hugepages%5D%5D</link>
<pubDate>Sat, 10 Apr 2021 14:37:57 GMT</pubDate>

</item>
<item>
<title>EXACS - exadata cloud service oci</title>
<description>&lt;br&gt;.</description>
<category>EXACC - Exadata Cloud at Customer</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BEXACS%20-%20exadata%20cloud%20service%20oci%5D%5D</link>
<pubDate>Sat, 10 Apr 2021 14:34:44 GMT</pubDate>

</item>
<item>
<title>.disable sql profile and baselines</title>
<description>&lt;blockquote&gt;QUESTION:&lt;br&gt;is there a way to ignore hints AND profiles through 1 single parameter?&lt;br&gt;like **** you all hints and profiles i hate you!&lt;br&gt; or is the only way to do this is set _optimizer_ignore_hints and disable/drop all profiles ?&lt;br&gt;&lt;br&gt;ANSWER: &lt;br&gt;For profiles: ALTER SESSION SET &lt;a tiddlylink=&quot;SQLTUNE_CATEGORY&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQLTUNE_CATEGORY&quot; href=&quot;http://karlarao.tiddlyspot.com#SQLTUNE_CATEGORY&quot; class=&quot;externalLink null&quot;&gt;SQLTUNE_CATEGORY&lt;/a&gt; = 'IGNOREMENOW';&lt;br&gt;For baselines: ALTER SESSION SET &lt;a tiddlylink=&quot;OPTIMIZER_USE_SQL_PLAN_BASELINES&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#OPTIMIZER_USE_SQL_PLAN_BASELINES&quot; href=&quot;http://karlarao.tiddlyspot.com#OPTIMIZER_USE_SQL_PLAN_BASELINES&quot; class=&quot;externalLink null&quot;&gt;OPTIMIZER_USE_SQL_PLAN_BASELINES&lt;/a&gt;=false&lt;br&gt;&lt;br&gt;just everything off, these are the knobs :)  because gluent doesn't like having &lt;a tiddlylink=&quot;USE_NL&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#USE_NL&quot; href=&quot;http://karlarao.tiddlyspot.com#USE_NL&quot; class=&quot;externalLink null&quot;&gt;USE_NL&lt;/a&gt; hint on offloaded tables it errors with &lt;a tiddlylink=&quot;KUP-04108&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#KUP-04108&quot; href=&quot;http://karlarao.tiddlyspot.com#KUP-04108&quot; class=&quot;externalLink null&quot;&gt;KUP-04108&lt;/a&gt;: unable to reread file&lt;br&gt;just in case the developers have to deal with 1000+ &lt;a tiddlylink=&quot;SQLs&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQLs&quot; href=&quot;http://karlarao.tiddlyspot.com#SQLs&quot; class=&quot;externalLink null&quot;&gt;SQLs&lt;/a&gt; we know how to attack this with these knobs&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;OTHER WAYS OF DISABLING: &lt;br&gt;&lt;a tiddlylink=&quot;IGNORE_OPTIM_EMBEDDED_HINTS&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#IGNORE_OPTIM_EMBEDDED_HINTS&quot; href=&quot;http://karlarao.tiddlyspot.com#IGNORE_OPTIM_EMBEDDED_HINTS&quot; class=&quot;externalLink null&quot;&gt;IGNORE_OPTIM_EMBEDDED_HINTS&lt;/a&gt; &amp;lt;- disables hints at session level  &lt;br&gt;&lt;pre&gt;select /*+ index(DEPT) ignore_optim_embedded_hints */ * from SCOTT.DEPT;
&lt;/pre&gt;optimizer_ignore_hints &amp;lt;- database wide or session level through trigger&lt;br&gt;&lt;pre&gt;alter session set optimizer_ignore_hints=true;
alter session set optimizer_ignore_parallel_hints=true;
&lt;/pre&gt;&lt;/blockquote&gt;</description>
<category>SQLProfiles</category>
<link>http://karlarao.tiddlyspot.com#%5B%5B.disable%20sql%20profile%20and%20baselines%5D%5D</link>
<pubDate>Thu, 08 Apr 2021 17:05:00 GMT</pubDate>

</item>
<item>
<title>VST optimized CTE and onion approach same query logic</title>
<description>&lt;div class=&quot;dcTOC&quot;&gt;&lt;a class=&quot;toggleButton&quot; title=&quot;show/collapse table of contents&quot; href=&quot;javascript:;&quot;&gt;/* Table of Contents */&lt;/a&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' rewrite process ', event)&quot;&gt; rewrite process &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' query logic before rewrite', event)&quot;&gt; query logic before rewrite&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' query logic after rewrite', event)&quot;&gt; query logic after rewrite&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' query logic onion approach', event)&quot;&gt; query logic onion approach&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' how do you compare 2 queries and say if they are logically equivalent?', event)&quot;&gt; how do you compare 2 queries and say if they are logically equivalent?&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' the SQLs', event)&quot;&gt; the SQLs&lt;/a&gt;&lt;/span&gt;&lt;ul&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' original 2.6hours', event)&quot;&gt; original 2.6hours&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' 2nd version - optimized CTE', event)&quot;&gt; 2nd version - optimized CTE&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span&gt;&lt;a href=&quot;javascript:;&quot; onclick=&quot;window.scrollToHeading('', ' 3rd version - onion approach ', event)&quot;&gt; 3rd version - onion approach &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; rewrite process &lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;ul&gt;&lt;li&gt; was able to rewrite the query, now runs 45secs in OUHUBPRD and 86secs in OUHUBDEV&lt;/li&gt;&lt;li&gt; transformed the correlated query cisadm.ci_per_name, cisadm.ci_acct_per to a join on cisadm.ci_sa &lt;/li&gt;&lt;li&gt; i retained the other one as correlated because it's just 80+ rows &lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre&gt;cisa_cte_tmp as
(SELECT/*+parallel(12)*/ t1.sa_id,
sa.acct_id,
t1.customer,
sa.sa_type_cd,
(SELECT rev_cl_cd
FROM cisadm.ci_sa_type
WHERE sa_type_cd = sa.sa_type_cd) revn_cls
FROM cisadm.ci_sa sa
left join
(
SELECT/*+ parallel(8) */ sa.sa_id, a.entity_name customer
FROM cisadm.ci_per_name a, cisadm.ci_acct_per b, cisadm.ci_sa sa
WHERE a.per_id = b.per_id
and b.acct_id = sa.acct_id
and a.prim_name_sw = 'Y'
and b.main_cust_sw = 'Y'
) t1
on t1.sa_id = sa.sa_id) 

&lt;/pre&gt;&lt;br&gt;&lt;h1&gt; query logic before rewrite&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3683046/113662855-ee1b3580-9676-11eb-9ae2-61f5d027954d.png&quot; title=&quot;SHIFT-CLICK=show full size, CTRL-CLICK=restore initial size&quot; style=&quot;width: 100%; height: 100%; cursor: move;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; query logic after rewrite&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3683046/113662858-ef4c6280-9676-11eb-8d6f-05faf9c72f82.png&quot; title=&quot;SHIFT-CLICK=show full size, CTRL-CLICK=restore initial size&quot; style=&quot;width: 100%; height: 100%; cursor: move;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; query logic onion approach&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;ul&gt;&lt;li&gt; the outer onion is the last query (A7)&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3683046/113662860-efe4f900-9676-11eb-81df-9365af0587c7.png&quot; title=&quot;SHIFT-CLICK=show full size, CTRL-CLICK=restore initial size&quot; style=&quot;width: 100%; height: 100%; cursor: move;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; how do you compare 2 queries and say if they are logically equivalent?&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;blockquote&gt;when I hit the number 7044266 rows on that &lt;a tiddlylink=&quot;CI_SA&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#CI_SA&quot; href=&quot;http://karlarao.tiddlyspot.com#CI_SA&quot; class=&quot;externalLink null&quot;&gt;CI_SA&lt;/a&gt; row source that gave me assurance that i'm not altering the result. and if you see the structure on the viz remained the same then logically they are the same. and also you need to actually eyeball the result&lt;br&gt;that's why i generated the VST before and after rewrite&lt;br&gt;&lt;br&gt;also do a CTAS on the original and new query, and do a SELECT MINUS SELECT to make sure both results are the same&lt;br&gt;&lt;br&gt;select * from t2 minus select * from t3&lt;br&gt;and then switch positions&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; the &lt;a tiddlylink=&quot;SQLs&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SQLs&quot; href=&quot;http://karlarao.tiddlyspot.com#SQLs&quot; class=&quot;externalLink null&quot;&gt;SQLs&lt;/a&gt;&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;h2&gt; original 2.6hours&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h2&gt;&lt;pre&gt; WITH dtrng
     AS (SELECT mnth
         FROM   (SELECT DISTINCT To_char(dt, 'YYYYMM') mnth
                 FROM   (SELECT LEVEL   n,
                                Add_months(Trunc(SYSDATE, 'YEAR')-1, -12)
                                + LEVEL AS dt
                         FROM   dual
                         CONNECT BY LEVEL &amp;lt;= ( Add_months(Trunc(SYSDATE, 'MM'),
                                               -1) -
                                               Add_months(Trunc(SYSDATE,
                                                          'YEAR'), -13)
                                                         ))x
                 ORDER  BY 1)),
     sas
     AS (SELECT
        /*+parallel(12)*/ x.*
         FROM   (SELECT rh.sa_id,
                        rh.rs_cd,
                        rc.char_val                 tariff,
                        rh.effdt                    rheffdt,
                        rc.effdt                    rceffdt,
                        Rank()
                          over (
                            PARTITION BY rh.sa_id
                            ORDER BY rh.effdt DESC) rnk
                 FROM   cisadm.ci_sa_rs_hist rh
                        join cisadm.ci_rc_char rc
                          ON ( rh.rs_cd = rc.rs_cd )
                 WHERE  rc.char_type_cd = 'RATEALPH')x
         WHERE  rnk = 1)
SELECT /*+parallel(12)*/ acct_id,
                         customer,
                         sa_type_cd,
                         revn_cls,
                         rate,
                         tariff,
                         accounting_date,
                         SUM(bdgt_amt) bdgt_amt,
                         CASE
                           WHEN Trim(revn_cls) = 'COMPANY' THEN SUM(cu_amt)
                           ELSE SUM(actual_amt)
                         END           actual_amt,
                         SUM(revn_amt) revn_amt,
                         SUM(bill_kwh) bill_kwh,
                         Max(bill_kw)  bill_kw
FROM   (SELECT sa.acct_id,
               ft.ft_id,
               (SELECT entity_name
                FROM   cisadm.ci_per_name
                WHERE  prim_name_sw = 'Y'
                       AND per_id IN (SELECT per_id
                                      FROM   cisadm.ci_acct_per
                                      WHERE  main_cust_sw = 'Y'
                                             AND acct_id = sa.acct_id)) customer
               ,
               sa.sa_type_cd,
               (SELECT rev_cl_cd
                FROM   cisadm.ci_sa_type
                WHERE  sa_type_cd = sa.sa_type_cd)                      revn_cls
               ,
               ss.rs_cd
               rate,
               ss.tariff,
               Trunc(ft.accounting_dt, 'MM')
               accounting_date
                      ,
               cur_amt
                      bdgt_amt,
               tot_amt
               actual_amt,
               Nvl((SELECT SUM(-calc_amt)
                    FROM   cisadm.ci_bseg_calc_ln bc
                           join cisadm.ci_bseg bs
                             ON ( bc.bseg_id = bs.bseg_id )
                    WHERE  bs.bill_id = ft.parent_id
                           AND Trim(bc.dst_id) = 'EX-MISCGL'), 0)       cu_amt,
               Nvl((SELECT SUM(-amount)
                    FROM   cisadm.ci_ft_gl
                    WHERE  dst_id LIKE 'RV%'
                           AND ft_id = ft.ft_id), 0)                    revn_amt
               ,
               CASE
                 WHEN ft_type_flg = 'BX' THEN -1
                 ELSE 1
               END * (SELECT SUM(bill_sq)
                      FROM   cisadm.ci_bseg_sq
                      WHERE  uom_cd NOT IN ( 'MTRR', 'KW', 'KVRH', 'PWRF',
                                             'HPS', 'KWHE', 'KWHQ', 'KWHH',
                                             '    ' )
                             AND bseg_id = ft.sibling_id)               bill_kwh
               ,
               CASE
                 WHEN ft_type_flg = 'BX' THEN -1
                 ELSE 1
               END * (SELECT Max(bill_sq)
                      FROM   cisadm.ci_bseg_sq
                      WHERE  sqi_cd = 'BILLKW'
                             AND bseg_id = ft.sibling_id)               bill_kw
        FROM   cisadm.ci_ft ft
               join cisadm.ci_sa sa
                 ON ( ft.sa_id = sa.sa_id )
               join sas ss
                 ON ( ft.sa_id = ss.sa_id )
               join dtrng dt
                 ON ( To_char(accounting_dt, 'YYYYMM') = dt.mnth )
        WHERE  ft_type_flg LIKE 'B%'
               AND freeze_dttm IS NOT NULL
               AND ( To_char(rheffdt, 'YYYYMM') &amp;lt;= dt.mnth )
               AND ( To_char(rceffdt, 'YYYYMM') &amp;lt;= dt.mnth ))
GROUP  BY acct_id,
          customer,
          sa_type_cd,
          revn_cls,
          rate,
          tariff,
          accounting_date 
/
&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;h2&gt; 2nd version - optimized CTE&lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h2&gt;&lt;pre&gt;
 WITH dtrng
     AS (SELECT /* test no temp table */ mnth
         FROM   (SELECT DISTINCT To_char(dt, 'YYYYMM') mnth
                 FROM   (SELECT LEVEL   n,
                                Add_months(Trunc(SYSDATE, 'YEAR')-1, -12)
                                + LEVEL AS dt
                         FROM   dual
                         CONNECT BY LEVEL &amp;lt;= ( Add_months(Trunc(SYSDATE, 'MM'),
                                               -1) -
                                               Add_months(Trunc(SYSDATE,
                                                          'YEAR'), -13)
                                                         ))x
                 ORDER  BY 1)),
     rc_char
     AS (SELECT RS.rs_cd,
                CH.char_val,
                Trim(CH.char_type_cd) char_type_cd,
                effdt
         FROM   cisadm.ci_rs RS
                left join (SELECT rs_cd,
                                  calc_grp_cd,
                                  effdt
                           FROM   cisadm.c1_rs_rv2) RV
                       ON RV.rs_cd = RS.rs_cd
                left join cisadm.c1_calc_rule_char CH
                       ON CH.calc_grp_cd = RV.calc_grp_cd
         WHERE  Trim(CH.char_type_cd) = 'RATEALPH'),
     sas
     AS (SELECT
        /*+parallel(12)*/ x.*
         FROM   (SELECT rh.sa_id,
                        rh.rs_cd,
                        rc.char_val                 tariff,
                        rh.effdt                    rheffdt,
                        rc.effdt                    rceffdt,
                        Rank()
                          over (
                            PARTITION BY rh.sa_id
                            ORDER BY rh.effdt DESC) rnk
                 FROM   cisadm.ci_sa_rs_hist rh
                        join rc_char rc
                          ON ( rh.rs_cd = rc.rs_cd )
                 WHERE  rc.char_type_cd = 'RATEALPH')x
         WHERE  rnk = 1),
cisa_cte_tmp as
 (SELECT /*+parallel(12)*/ t1.sa_id,
 sa.acct_id,
               t1.customer,
               sa.sa_type_cd,
                              (SELECT rev_cl_cd
                FROM   cisadm.ci_sa_type
                WHERE  sa_type_cd = sa.sa_type_cd)                      revn_cls
        FROM   cisadm.ci_sa sa
        left join
              (
SELECT /*+ parallel(8) */ sa.sa_id, a.entity_name customer
                              FROM   cisadm.ci_per_name a, cisadm.ci_acct_per b, cisadm.ci_sa sa
                              WHERE  a.per_id = b.per_id
                              and b.acct_id = sa.acct_id
                              and a.prim_name_sw = 'Y'
                              and b.main_cust_sw = 'Y'
                              ) t1
                                                          on t1.sa_id = sa.sa_id) 
SELECT /* main query */ /*+parallel(12)*/ acct_id,
                         customer,
                         sa_type_cd,
                         revn_cls,
                         rate,
                         tariff,
                         accounting_date,
                         SUM(bdgt_amt) bdgt_amt,
                         CASE
                           WHEN Trim(revn_cls) = 'COMPANY' THEN SUM(cu_amt)
                           ELSE SUM(actual_amt)
                         END           actual_amt,
                         SUM(revn_amt) revn_amt,
                         SUM(bill_kwh) bill_kwh,
                         Max(bill_kw)  bill_kw
FROM   (
        SELECT sa.acct_id,
               ft.ft_id,
               sa.customer,
               sa.sa_type_cd,
               sa.revn_cls,
               ss.rs_cd rate,
               ss.tariff,
               Trunc(ft.accounting_dt, 'MM') accounting_date,
               cur_amt bdgt_amt,
               tot_amt actual_amt,
               Nvl((SELECT SUM(-calc_amt)
                    FROM   cisadm.ci_bseg_calc_ln bc
                           join cisadm.ci_bseg bs
                             ON ( bc.bseg_id = bs.bseg_id )
                    WHERE  bs.bill_id = ft.parent_id
                           AND Trim(bc.dst_id) = 'EX-MISCGL'), 0)       cu_amt,
               Nvl((SELECT SUM(-amount)
                    FROM   cisadm.ci_ft_gl
                    WHERE  dst_id LIKE 'RV%'
                           AND ft_id = ft.ft_id), 0)                    revn_amt,
               CASE
                 WHEN ft_type_flg = 'BX' THEN -1
                 ELSE 1
               END * (SELECT SUM(bill_sq)
                      FROM   cisadm.ci_bseg_sq sq
                      WHERE  ( sq.uom_cd NOT IN ( 'MTRR', 'KW', 'KVARH', 'PWRF',
                                                  'HPS', 'KWHE', 'KWHQ', 'KWHH',
                                                  ' ' )
                               -- KWH Usage  / CORRECTED RCB 05/2020
                               AND sq.tou_cd = ' ' )
                             AND bseg_id = ft.sibling_id)               bill_kwh
               ,
               CASE
                 WHEN ft_type_flg = 'BX' THEN -1
                 ELSE 1
               END * (SELECT Max(bill_sq)
                      FROM   cisadm.ci_bseg_sq
                      WHERE  sqi_cd = 'BILLKW'
                             AND bseg_id = ft.sibling_id)               bill_kw
        FROM   cisadm.ci_ft ft
               join cisadm.cisa_cte_tmp sa
                 ON ( ft.sa_id = sa.sa_id )
               join sas ss
                 ON ( ft.sa_id = ss.sa_id )
               join dtrng dt
                 ON ( To_char(accounting_dt, 'YYYYMM') = dt.mnth )
        WHERE  ft_type_flg LIKE 'B%'
               AND ft.accounting_dt &amp;gt;= To_date('01-AUG-20', 'DD-MON-YY')
               /* Added for PREPROD */
               AND ft.accounting_dt &amp;lt;= To_date('31-AUG-20', 'DD-MON-YY')
               /* Added for PREPROD */
               AND freeze_dttm IS NOT NULL
               AND ( To_char(rheffdt, 'YYYYMM') &amp;lt;= dt.mnth )
               AND ( To_char(rceffdt, 'YYYYMM') &amp;lt;= dt.mnth )
  )
GROUP  BY acct_id,
          customer,
          sa_type_cd,
          revn_cls,
          rate,
          tariff,
          accounting_date;

/*
Elapsed: 00:01:50.49

      Difference Statistics Name
---------------- --------------------------------------------------------------
              15 active txn count during cleanout
       1,737,168 Batched IO block miss count
         435,779 Batched IO (bound) vector count
             342 Batched IO buffer defrag count
          68,376 Batched IO double miss count
           1,809 Batched IO (full) vector count
         935,885 Batched IO same unit count
         472,306 Batched IO single block count
           1,526 Batched IO slow jump count
         303,600 Batched IO vector block count
          31,636 Batched IO vector read count
      21,305,812 buffer is not pinned count
     144,721,486 buffer is pinned count
          13,017 bytes received via SQL*Net from client
           3,156 bytes sent via SQL*Net to client
          30,025 Cached Commit SCN referenced
           1,166 calls to get snapshot scn: kcmgss
              99 calls to kcmgas
          24,509 calls to kcmgcs
              84 CCursor + sql area evicted
         196,687 cell blocks helped by minscn optimization
         239,807 cell blocks processed by cache layer
         237,607 cell blocks processed by data layer
         239,807 cell blocks processed by txn layer
       2,423,216 cell flash cache read hits
   1,946,476,544 cell IO uncompressed bytes
         137,053 cell logical write IO requests
             864 cell num smartio automem buffer allocation attempts
              10 cell num smartio transient cell failures
         229,978 cell overwrites in flash cache
  52,942,118,912 cell physical IO bytes eligible for predicate offload
  52,942,118,912 cell physical IO bytes eligible for smart IOs
  50,996,019,200 cell physical IO bytes saved by storage index
 122,626,859,464 cell physical IO interconnect bytes
     117,514,696 cell physical IO interconnect bytes returned by smart scan
             864 cell scans
             852 cell smart IO session cache hits
             852 cell smart IO session cache lookups
             852 cell smart IO session cache soft misses
         273,972 cell writes to flash cache
               5 change write time
             105 cleanout - number of ktugct calls
              93 cleanouts only - consistent read gets
             366 cluster key scan block gets
              92 cluster key scans
             113 cluster wait time
              79 commit batch/immediate performed
              79 commit batch/immediate requested
               6 commit cleanout failures: block lost
               2 commit cleanout failures: callback failure
              45 commit cleanouts
              37 commit cleanouts successfully completed
              79 commit immediate performed
              79 commit immediate requested
              93 Commit SCN cached
              93 commit txn count during cleanout
          13,713 concurrency wait time
           1,258 consistent changes
      52,938,886 consistent gets
       6,462,661 consistent gets direct
      21,750,528 consistent gets examination
      21,711,058 consistent gets examination (fastpath)
      46,476,225 consistent gets from cache
      24,725,697 consistent gets pin
      21,899,692 consistent gets pin (fastpath)
          59,625 CPU used by this session
           5,640 CPU used when call started
           3,897 db block changes
          10,973 db block gets
           8,410 db block gets direct
           2,563 db block gets from cache
             354 db block gets from cache (fastpath)
         193,625 DB time
              12 deferred (CURRENT) block cleanout applications
               4 DFO trees parallelized
             196 dirty buffers inspected
              65 enqueue conversions
          34,597 enqueue releases
          34,663 enqueue requests
              11 enqueue timeouts
              18 enqueue waits
             309 execute count
       1,128,777 fastpath consistent get quota limit
  61,591,109,414 file io wait time
       2,594,822 free buffer inspected
       2,296,443 free buffer requested
               7 gc cr blocks received
              54 gc current blocks received
       2,164,338 gc local grants
         132,054 gc remote grants
             423 gcs affinity lock failures
         132,189 gcs messages sent
               1 gcs read-mostly lock failures
         635,721 gcs read-mostly lock grants
              26 ges messages sent
              32 global enqueue get time
          36,687 global enqueue gets sync
          36,586 global enqueue releases
               2 Heap Segment Array Updates
       1,403,459 hot buffers moved to head of LRU
           1,218 HSC Heap Segment Block Changes
              93 immediate (CR) block cleanout applications
              16 immediate (CURRENT) block cleanout applications
          72,976 in call idle wait time
               4 index fast full scans (full)
             159 index fast full scans (rowid ranges)
       3,465,146 index fetch by key
       7,715,969 index scans kdiixs1
              80 KTFB alloc req
      75,497,472 KTFB alloc space (block)
           1,993 KTFB alloc time (ms)
 380,754,231,296 logical read bytes from cache
             203 messages sent
          88,571 min active SCN optimization applied on CR
         125,759 no buffer to keep pinned count
      24,699,824 no work - consistent read gets
      11,488,635 non-idle wait count
          69,644 non-idle wait time
             308 opened cursors cumulative
               4 Parallel operations not downgraded
               6 parse count (hard)
             160 parse count (total)
           1,251 parse time cpu
          14,900 parse time elapsed
 105,944,801,280 physical read bytes
       2,472,946 physical read IO requests
       2,472,960 physical read requests optimized
 105,945,030,656 physical read total bytes
 105,945,030,656 physical read total bytes optimized
       2,472,960 physical read total IO requests
         186,145 physical read total multi block requests
      12,932,715 physical reads
       2,296,214 physical reads cache
         271,099 physical reads cache prefetch
      10,636,501 physical reads direct
       4,173,840 physical reads direct temporary tablespace
  34,753,216,512 physical write bytes
         137,053 physical write IO requests
         136,986 physical write requests optimized
  34,753,216,512 physical write total bytes
  34,684,321,792 physical write total bytes optimized
         137,053 physical write total IO requests
         136,585 physical write total multi block requests
       4,242,336 physical writes
       4,242,336 physical writes direct
       4,233,926 physical writes direct temporary tablespace
       4,242,336 physical writes non checkpoint
              43 pinned buffers inspected
               6 prefetched blocks aged out before use
       2,230,749 PX local messages recv'd
       2,230,749 PX local messages sent
              12 PX remote messages recv'd
              12 PX remote messages sent
               4 queries parallelized
          35,208 recursive calls
          54,478 recursive cpu usage
          10,576 redo entries
      69,611,152 redo size
      69,270,612 redo size for direct writes
             107 redo subscn max counts
               1 redo synch writes
              16 Requests to/from client
         608,188 rows fetched via callback
              56 session cursor cache count
             162 session cursor cache hits
      52,949,859 session logical reads
       3,080,192 session pga memory
     192,741,376 session pga memory max
       1,833,600 session uga memory
     177,646,336 session uga memory max
         790,834 shared hash latch upgrades - no wait
               2 shared hash latch upgrades - wait
             162 sorts (memory)
       7,913,932 sorts (rows)
             110 sql area evicted
              16 SQL*Net roundtrips to/from client
               2 switch current to new buffer
      78,830,039 table fetch by rowid
               1 table fetch continued row
         110,357 table scan blocks gotten
      13,524,901 table scan disk non-IMC rows gotten
      13,813,969 table scan rows gotten
             864 table scans (direct read)
           2,959 table scans (long tables)
             366 table scans (rowid ranges)
           1,746 table scans (short tables)
       2,097,152 temp space allocated (bytes)
         110,832 undo change vector size
             143 user calls
               2 user commits
          55,172 user I/O wait time
              12 workarea executions - onepass
             371 workarea executions - optimal

system@ouhubprd&amp;gt; select count(1) from t3;

 COUNT(1)
---------
   589881

1 row selected.
*/
&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;h2&gt; 3rd version - onion approach &lt;div style=&quot;font-size: 0.5em; color: blue;&quot;&gt;&lt;a class=&quot;dcTOCTop&quot; title=&quot;Go to top of tiddler&quot; href=&quot;javascript:;&quot;&gt; [top]&lt;/a&gt;&lt;/div&gt;&lt;/h2&gt;&lt;pre&gt;
WITH 
dtrng AS (
	SELECT /* test rate class */ mnth
	FROM (
		SELECT DISTINCT To_char(dt, 'YYYYMM') mnth 
		FROM (
			SELECT LEVEL n, Add_months(Trunc(SYSDATE, 'YEAR')-1, -12) + LEVEL AS dt 
			FROM   dual 
			CONNECT BY LEVEL &amp;lt;= ( Add_months(Trunc(SYSDATE, 'MM'), -1) - Add_months(Trunc(SYSDATE, 'YEAR'), -13))
			) x 
		ORDER  BY 1
	)
), 
rc_char AS (
	SELECT RS.rs_cd, 
		CH.char_val, 
		Trim(CH.char_type_cd) char_type_cd, 
		effdt 
	FROM   cisadm.ci_rs RS 
	left join (
		SELECT rs_cd, 
			calc_grp_cd, 
			effdt 
		FROM cisadm.c1_rs_rv2
		) RV
		ON RV.rs_cd = RS.rs_cd 
	left join cisadm.c1_calc_rule_char CH ON CH.calc_grp_cd = RV.calc_grp_cd 
	 WHERE  Trim(CH.char_type_cd) = 'RATEALPH'
), 
sas AS (
	SELECT 
		/*+parallel(12)*/ x.* 
		FROM (
			SELECT rh.sa_id, 
				rh.rs_cd, 
				rc.char_val                 tariff, 
				rh.effdt                    rheffdt, 
				rc.effdt                    rceffdt, 
				Rank() over ( PARTITION BY rh.sa_id ORDER BY rh.effdt DESC) rnk 
			FROM   cisadm.ci_sa_rs_hist rh 
			join rc_char rc ON ( rh.rs_cd = rc.rs_cd ) 
			WHERE  rc.char_type_cd = 'RATEALPH'
			) x 
		WHERE rnk = 1
),
a1 as (
	SELECT
		ss.rs_cd rate, ss.tariff, Trunc(ft.accounting_dt, 'MM') accounting_date, cur_amt bdgt_amt, tot_amt actual_amt, 
		sa.acct_id, sa.sa_type_cd, 
		ft.ft_id, ft.parent_id, ft.ft_type_flg, ft.sibling_id
	FROM cisadm.ci_ft ft 
	join cisadm.ci_sa sa ON ( ft.sa_id = sa.sa_id )
	join sas ss ON ( ft.sa_id = ss.sa_id ) 
	join dtrng dt ON ( To_char(accounting_dt, 'YYYYMM') = dt.mnth ) 
	where ft_type_flg LIKE 'B%' 
		AND ft.accounting_dt &amp;gt;= To_date('01-AUG-20', 'DD-MON-YY') 
		/* Added for PREPROD */ 
		AND ft.accounting_dt &amp;lt;= To_date('31-AUG-20', 'DD-MON-YY') 
		/* Added for PREPROD */ 
		AND freeze_dttm IS NOT NULL
		AND ( To_char(rheffdt, 'YYYYMM') &amp;lt;= dt.mnth ) 
		AND ( To_char(rceffdt, 'YYYYMM') &amp;lt;= dt.mnth ) 
),
a2 as (
	select 
		a1.rate, a1.tariff, a1.accounting_date, a1.bdgt_amt, a1.actual_amt, 
		a1.acct_id, a1.sa_type_cd, a1.ft_id, a1.parent_id, a1.ft_type_flg, a1.sibling_id, 
		max(CASE WHEN ft_type_flg = 'BX' THEN -1 ELSE 1 END * sq.bill_sq) bill_kw
	from a1
	left join cisadm.ci_bseg_sq sq ON (sq.bseg_id = a1.sibling_id and sq.sqi_cd = 'BILLKW' )
	group by a1.rate, a1.tariff, a1.accounting_date, a1.bdgt_amt, a1.actual_amt, 
		a1.acct_id, a1.sa_type_cd, a1.ft_id, a1.parent_id, a1.ft_type_flg, a1.sibling_id
),
a3 as (
	select a2.rate, a2.tariff, a2.accounting_date, a2.bdgt_amt, a2.actual_amt, 
		a2.acct_id, a2.sa_type_cd, a2.ft_id, a2.parent_id, a2.ft_type_flg, a2.sibling_id, a2.bill_kw,
		CASE WHEN ft_type_flg = 'BX' THEN -1 ELSE 1 END * sum(sq2.bill_sq) bill_kwh
	from a2
	left join cisadm.ci_bseg_sq sq2 ON (sq2.bseg_id = a2.sibling_id and sq2.uom_cd NOT IN ( 'MTRR', 'KW', 'KVARH', 'PWRF', 'HPS', 'KWHE', 'KWHQ', 'KWHH', ' ' ) and sq2.tou_cd = ' ' )
	group by a2.rate, a2.tariff, a2.accounting_date, a2.bdgt_amt, a2.actual_amt, 
		a2.acct_id, a2.sa_type_cd, a2.ft_id, a2.parent_id, a2.ft_type_flg, a2.sibling_id, a2.bill_kw
),
a4 as (
	select a3.rate, a3.tariff, a3.accounting_date, a3.bdgt_amt, a3.actual_amt, 
		a3.acct_id, a3.sa_type_cd, a3.ft_id, a3.parent_id, a3.ft_type_flg, a3.sibling_id, a3.bill_kw, a3.bill_kwh, 
		max(pn.entity_name) customer
	from a3
	left join cisadm.ci_acct_per ap ON (ap.main_cust_sw = 'Y' AND ap.acct_id = a3.acct_id)
	left join cisadm.ci_per_name pn ON (pn.prim_name_sw = 'Y' AND pn.per_id = ap.per_id)
	group by a3.rate, a3.tariff, a3.accounting_date, a3.bdgt_amt, a3.actual_amt, 
		a3.acct_id, a3.sa_type_cd, a3.ft_id, a3.parent_id, a3.ft_type_flg, a3.sibling_id, a3.bill_kw, a3.bill_kwh
),
a5 as (
	select a4.rate, a4.tariff, a4.accounting_date, a4.bdgt_amt, a4.actual_amt, 
		a4.acct_id, a4.sa_type_cd, a4.ft_id, a4.parent_id, a4.ft_type_flg, a4.sibling_id, a4.bill_kw, a4.bill_kwh, a4.customer,
	max(st.rev_cl_cd) revn_cls
	from a4
	left join cisadm.ci_sa_type st ON (st.sa_type_cd = a4.sa_type_cd)
	group by a4.rate, a4.tariff, a4.accounting_date, a4.bdgt_amt, a4.actual_amt, 
		a4.acct_id, a4.sa_type_cd, a4.ft_id, a4.parent_id, a4.ft_type_flg, a4.sibling_id, a4.bill_kw, a4.bill_kwh, a4.customer
),
a6 as (
	select a5.rate, a5.tariff, a5.accounting_date, a5.bdgt_amt, a5.actual_amt, 
		a5.acct_id, a5.sa_type_cd, a5.ft_id, a5.parent_id, a5.ft_type_flg, a5.sibling_id, a5.bill_kw, a5.bill_kwh, a5.customer, a5.revn_cls,
		nvl(sum(-fg.amount),0) revn_amt
	from a5
	left join cisadm.ci_ft_gl fg ON (fg.dst_id LIKE 'RV%' AND fg.ft_id = a5.ft_id)
	group by a5.rate, a5.tariff, a5.accounting_date, a5.bdgt_amt, a5.actual_amt, 
		a5.acct_id, a5.sa_type_cd, a5.ft_id, a5.parent_id, a5.ft_type_flg, a5.sibling_id, a5.bill_kw, a5.bill_kwh, a5.customer, a5.revn_cls
),
a7 as (
	select a6.rate, a6.tariff, a6.accounting_date, a6.bdgt_amt, a6.actual_amt, 
		a6.acct_id, a6.sa_type_cd, a6.ft_id, a6.parent_id, a6.ft_type_flg, a6.sibling_id, a6.bill_kw, a6.bill_kwh, a6.customer, a6.revn_cls, a6.revn_amt,
		nvl(sum(-bc.calc_amt),0) cu_amt
	from a6
	left join cisadm.ci_bseg bs ON ( bs.bill_id = a6.parent_id )
	left join cisadm.ci_bseg_calc_ln bc ON (trim(bc.dst_id) = 'EX-MISCGL' AND bc.bseg_id = bs.bseg_id)
	group by a6.rate, a6.tariff, a6.accounting_date, a6.bdgt_amt, a6.actual_amt, 
		a6.acct_id, a6.sa_type_cd, a6.ft_id, a6.parent_id, a6.ft_type_flg, a6.sibling_id, a6.bill_kw, a6.bill_kwh, a6.customer, a6.revn_cls, a6.revn_amt
)
SELECT /*+parallel(12)*/ 
	acct_id, 
	customer, 
	sa_type_cd, 
	revn_cls, 
	rate, 
	tariff, 
	accounting_date, 
	SUM(bdgt_amt) bdgt_amt, 
	CASE WHEN Trim(revn_cls) = 'COMPANY' THEN SUM(cu_amt) ELSE SUM(actual_amt) END actual_amt, 
	SUM(revn_amt) revn_amt, 
	SUM(bill_kwh) bill_kwh, 
	Max(bill_kw)  bill_kw 
FROM a7
GROUP  BY acct_id, 
          customer, 
          sa_type_cd, 
          revn_cls, 
          rate, 
          tariff, 
          accounting_date 
/

/*
Elapsed: 00:01:03.48

      Difference Statistics Name
---------------- --------------------------------------------------------------
               6 active txn count during cleanout
       1,271,660 Batched IO block miss count
         359,302 Batched IO (bound) vector count
              14 Batched IO buffer defrag count
          70,097 Batched IO double miss count
         763,930 Batched IO same unit count
         395,067 Batched IO single block count
          72,622 Batched IO vector block count
          34,102 Batched IO vector read count
      28,534,825 buffer is not pinned count
     162,191,316 buffer is pinned count
          12,361 bytes received via SQL*Net from client
           3,535 bytes sent via SQL*Net to client
          16,179 Cached Commit SCN referenced
           1,909 calls to get snapshot scn: kcmgss
             107 calls to kcmgas
          47,437 calls to kcmgcs
              56 CCursor + sql area evicted
         197,785 cell blocks helped by minscn optimization
         240,904 cell blocks processed by cache layer
         238,168 cell blocks processed by data layer
         240,904 cell blocks processed by txn layer
       1,752,886 cell flash cache read hits
   1,951,072,256 cell IO uncompressed bytes
           1,187 cell logical write IO requests
             864 cell num smartio automem buffer allocation attempts
              12 cell num smartio transient cell failures
           1,906 cell overwrites in flash cache
  52,942,118,912 cell physical IO bytes eligible for predicate offload
  52,942,118,912 cell physical IO bytes eligible for smart IOs
  50,991,439,872 cell physical IO bytes saved by storage index
  15,198,069,312 cell physical IO interconnect bytes
     117,514,816 cell physical IO interconnect bytes returned by smart scan
             864 cell scans
             852 cell smart IO session cache hits
             852 cell smart IO session cache lookups
             852 cell smart IO session cache soft misses
           2,240 cell writes to flash cache
               3 change write time
              70 cleanout - number of ktugct calls
              66 cleanouts only - consistent read gets
             522 cluster key scan block gets
             214 cluster key scans
              80 cluster wait time
              79 commit batch/immediate performed
              79 commit batch/immediate requested
               6 commit cleanout failures: block lost
               2 commit cleanout failures: callback failure
              61 commit cleanouts
              53 commit cleanouts successfully completed
              79 commit immediate performed
              79 commit immediate requested
              66 Commit SCN cached
              67 commit txn count during cleanout
           9,219 concurrency wait time
           1,258 consistent changes
      57,260,214 consistent gets
       6,462,661 consistent gets direct
      19,405,844 consistent gets examination
      19,249,529 consistent gets examination (fastpath)
      50,797,553 consistent gets from cache
      31,391,709 consistent gets pin
      29,821,428 consistent gets pin (fastpath)
          32,714 CPU used by this session
             443 CPU used when call started
           3,906 db block changes
          10,987 db block gets
           8,410 db block gets direct
           2,577 db block gets from cache
             358 db block gets from cache (fastpath)
         146,256 DB time
              28 deferred (CURRENT) block cleanout applications
               4 DFO trees parallelized
             167 dirty buffers inspected
              66 enqueue conversions
             769 enqueue releases
             870 enqueue requests
              22 enqueue timeouts
              21 enqueue waits
             914 execute count
     375,723,722 file io wait time
       1,902,404 free buffer inspected
       1,767,840 free buffer requested
               1 gc cr blocks received
              12 gc current block receive time
           1,029 gc current blocks received
       1,759,369 gc local grants
           7,480 gc remote grants
             544 gcs affinity lock failures
           8,510 gcs messages sent
               1 gcs read-mostly lock failures
         538,609 gcs read-mostly lock grants
              15 ges messages sent
               1 global enqueue get time
           3,392 global enqueue gets sync
           3,291 global enqueue releases
               1 heap block compress
               2 Heap Segment Array Updates
         880,631 hot buffers moved to head of LRU
           1,213 HSC Heap Segment Block Changes
              66 immediate (CR) block cleanout applications
               9 immediate (CURRENT) block cleanout applications
          72,676 in call idle wait time
           1,266 index fast full scans (full)
       3,827,633 index fetch by key
       6,220,919 index scans kdiixs1
              80 KTFB alloc req
      69,206,016 KTFB alloc space (block)
           2,127 KTFB alloc time (ms)
 416,154,664,960 logical read bytes from cache
             211 messages sent
          65,121 min active SCN optimization applied on CR
          10,257 no buffer to keep pinned count
      31,342,106 no work - consistent read gets
       4,166,666 non-idle wait count
          47,004 non-idle wait time
           1,051 opened cursors cumulative
               4 Parallel operations not downgraded
              12 parse count (failures)
              18 parse count (hard)
             448 parse count (total)
             855 parse time cpu
          10,095 parse time elapsed
  67,415,498,752 physical read bytes
       1,802,611 physical read IO requests
       1,802,625 physical read requests optimized
  67,415,728,128 physical read total bytes
  67,415,728,128 physical read total bytes optimized
       1,802,625 physical read total IO requests
          51,514 physical read total multi block requests
       8,229,431 physical reads
       1,766,770 physical reads cache
          42,632 physical reads cache prefetch
       6,462,661 physical reads direct
     303,472,640 physical write bytes
           1,187 physical write IO requests
           1,120 physical write requests optimized
     303,472,640 physical write total bytes
     234,700,800 physical write total bytes optimized
           1,187 physical write total IO requests
             962 physical write total multi block requests
          37,045 physical writes
          37,045 physical writes direct
          28,635 physical writes direct temporary tablespace
          37,045 physical writes non checkpoint
              17 pinned buffers inspected
           1,720 prefetched blocks aged out before use
         406,318 PX local messages recv'd
         406,318 PX local messages sent
              12 PX remote messages recv'd
              12 PX remote messages sent
               4 queries parallelized
           2,515 recursive calls
          32,574 recursive cpu usage
          10,567 redo entries
      69,612,644 redo size
      69,270,656 redo size for direct writes
              69 redo subscn max counts
               1 redo synch writes
              16 Requests to/from client
         608,392 rows fetched via callback
              81 session cursor cache count
             689 session cursor cache hits
      57,271,201 session logical reads
       2,883,584 session pga memory
     109,707,264 session pga memory max
       2,746,992 session uga memory
     105,709,736 session uga memory max
         843,754 shared hash latch upgrades - no wait
              68 shared hash latch upgrades - wait
              78 sorts (memory)
       7,265,269 sorts (rows)
              56 sql area evicted
              12 sql area purged
              16 SQL*Net roundtrips to/from client
               2 switch current to new buffer
      91,938,642 table fetch by rowid
               2 table fetch continued row
         101,686 table scan blocks gotten
      10,064,796 table scan disk non-IMC rows gotten
      11,099,748 table scan rows gotten
             864 table scans (direct read)
          10,208 table scans (long tables)
             370 table scans (rowid ranges)
              89 table scans (short tables)
       2,097,152 temp space allocated (bytes)
         112,856 undo change vector size
             143 user calls
               2 user commits
          37,610 user I/O wait time
             523 workarea executions - optimal

system@ouhubprd&amp;gt; select count(1) from t2;

 COUNT(1)
---------
   589881

1 row selected.
*/
&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
<category>..my rewrite examples</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BVST%20optimized%20CTE%20and%20onion%20approach%20same%20query%20logic%5D%5D</link>
<pubDate>Tue, 06 Apr 2021 05:57:00 GMT</pubDate>

</item>
<item>
<title>normalized to unpivot, multiple left join rewrite</title>
<description>&lt;ul&gt;&lt;li&gt; if you UNPIVOT or denormalize you only join once on the table.generatedjobid and not join for every &quot;type&quot; or &quot;parametertype&quot;. you can also take advantage of parallelism and partition pruning on &quot;dateacquired&quot;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;pre&gt;
# original 
```
SELECT TOP (100) j.[generatedjobid],
       j.[jobid],
       j.[city],
       j.state,
       j.zipcode,
       j.country,
       j.[createddate],
       j.[dateacquired],
       j.[description],
       j.[expired],
       j.[expirydate],
       j.[fedcontractor],
       j.[lastupdateddate],
       j.[sourcestate],
       j.[title],
       j.[filename],
       onet.value           AS onet_code,
       naics.value          AS naics_code,
       mined.value          AS min_education,
       expr.value           AS experience,
       lic.value            AS license,
       train.value          AS training,
       positions.maximum    AS maxPositions,
       duration.maximum     AS jobDuration,
       hoursperweek.maximum AS weeklyHours,
       shift.maximum        AS shift,
       salary.minimum       AS minSalary,
       salary.maximum       AS maxSalary,
       salary.unit          AS salaryUnit,
       addr.city            AS companyCity,
       addr.state           AS companyState,
       addr.zipcode         AS companyZipcode,
       addr.country         AS companyCountry
FROM   [conduent].[dbo].[job] j
       LEFT JOIN classification onet
              ON ( j.generatedjobid = onet.generatedjobid
                   AND onet.type = 'ONET' )
       LEFT JOIN classification naics
              ON ( j.generatedjobid = naics.generatedjobid
                   AND naics.type = 'NAICS' )
       LEFT JOIN requirement mined
              ON ( j.generatedjobid = mined.generatedjobid
                   AND mined.type = 'mineducation' )
       LEFT JOIN requirement expr
              ON ( j.generatedjobid = expr.generatedjobid
                   AND expr.type = 'experience' )
       LEFT JOIN requirement lic
              ON ( j.generatedjobid = lic.generatedjobid
                   AND lic.type = 'license' )
       LEFT JOIN requirement train
              ON ( j.generatedjobid = train.generatedjobid
                   AND train.type = 'training' )
       LEFT JOIN parameter positions
              ON ( j.generatedjobid = positions.generatedjobid
                   AND parametertype = 'positions' )
       LEFT JOIN parameter duration
              ON ( j.generatedjobid = duration.generatedjobid
                   AND duration.parametertype = 'duration' )
       LEFT JOIN parameter hoursperweek
              ON ( j.generatedjobid = hoursperweek.generatedjobid
                   AND hoursperweek.parametertype = 'hoursperweek' )
       LEFT JOIN parameter shift
              ON ( j.generatedjobid = shift.generatedjobid
                   AND shift.parametertype = 'shift' )
       LEFT JOIN parameter salary
              ON ( j.generatedjobid = salary.generatedjobid
                   AND salary.parametertype = 'salary' )
       LEFT JOIN [application] a
              ON ( j.generatedjobid = a.generatedjobid )
       LEFT JOIN [address] addr
              ON ( a.applicationid = addr.applicationid )
WHERE  [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59') 



TableName                RowCount
[dbo].[Address]    1,099,494
[dbo].[Application]    38,549,607
[dbo].[Classification]    77,099,214
[dbo].[DailySummary]    574
[dbo].[Job]                36,503,982
[dbo].[JobUploadLog]    86,366
[dbo].[Method]                1,724,666
[dbo].[Parameter]    37,235,995
[dbo].[Requirement]    29,788,796

```


# rewrite
```

 WITH cte_classification as (
     select * from 
     classification 
     unpivot (value for type in ('ONET','NAICS') )
     where  [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59')  
 ),
 cte_requirement as (
     select * from 
     requirement 
     unpivot (value for type in ('mineducation','experience','license','training' ) )
     where  [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59')   
 ),
 cte_parameter as (
     select * from 
     parameter 
     unpivot (('minimum','maximum','unit')) for parametertype in ('positions' , 'duration', 'hoursperweek', 'shift' , 'salary') )
     where  [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59')  
 )
 SELECT TOP (100) j.[generatedjobid],
                 j.[jobid],
                 j.[city],
                 j.state,
                 j.zipcode,
                 j.country,
                 j.[createddate],
                 j.[dateacquired],
                 j.[description],
                 j.[expired],
                 j.[expirydate],
                 j.[fedcontractor],
                 j.[lastupdateddate],
                 j.[sourcestate],
                 j.[title],
                 j.[filename],
                 cte_class.onet         AS onet_code,
                 cte_class.naics        AS naics_code,
                 cte_req.mined          AS min_education,
                 cte_req.expr           AS experience,
                 cte_req.lic            AS license,
                 cte_req.train          AS training,
                 cte_param.positions.maximum    AS maxPositions,
                 cte_param.duration.maximum     AS jobDuration,
                 cte_param.hoursperweek.maximum AS weeklyHours,
                 cte_param.shift.maximum        AS shift,
                 cte_param.salary.minimum       AS minSalary,
                 cte_param.salary.maximum       AS maxSalary,
                 cte_param.salary.unit          AS salaryUnit,
                 addr.city            AS companyCity,
                 addr.state           AS companyState,
                 addr.zipcode         AS companyZipcode,
                 addr.country         AS companyCountry
FROM   [conduent].[dbo].[job] j
       LEFT JOIN cte_classification cte_class
            ON (j.generatedjobid = cte_class.generatedjobid)
       LEFT JOIN cte_requirement cte_req      
            ON (j.generatedjobid = cte_req.generatedjobid)             
       LEFT JOIN cte_parameter cte_param      
            ON (j.generatedjobid = cte_param.generatedjobid)
       LEFT JOIN [application] a
              ON ( j.generatedjobid = a.generatedjobid 
              AND  [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59')  )
       LEFT JOIN [address] addr
              ON ( a.applicationid = addr.applicationid 
              AND [dateacquired] BETWEEN CONVERT(DATETIME, '2017-01-01') AND
                              CONVERT(DATETIME, '2018-12-31 23:59:59') )
```



## other examples 

### example1 
```
select 
    'RUNNAME',
    'BEGIN',
    sysdate,
    wait_class || ' - ' || event as class, 
    measure, 
    value
from 
(
select * from v$session_event 
unpivot (value for measure in (TOTAL_WAITS as 'TOTAL_WAITS', 
                                TOTAL_TIMEOUTS as 'TOTAL_TIMEOUTS',
                                TIME_WAITED as 'TIME_WAITED',
                                AVERAGE_WAIT as 'AVERAGE_WAIT',
                                MAX_WAIT as 'MAX_WAIT',
                                TIME_WAITED_MICRO as 'TIME_WAITED_MICRO', 
                                EVENT_ID as 'EVENT_ID',
                                WAIT_CLASS_ID as 'WAIT_CLASS_ID',
                                WAIT_CLASS# as 'WAIT_CLASS#'
                                ))
where sid in (select /*+ no_merge */ sid from v$mystat where rownum = 1)
)

       
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,TOTAL_WAITS      ,        50
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,TOTAL_TIMEOUTS   ,         0
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,TIME_WAITED      ,        57
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,AVERAGE_WAIT     ,      1.15
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,MAX_WAIT         ,         5
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,TIME_WAITED_MICRO,    574273
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,EVENT_ID         , 443865681
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,WAIT_CLASS_ID    ,1740759767
RUNNAME,BEGIN,20160420 21:58:36,User I/O - cell multiblock physical read                    ,WAIT_CLASS#      ,         8


       SID,       SID,EVENT                            ,TOTAL_WAITS,TOTAL_TIMEOUTS,TIME_WAITED,AVERAGE_WAIT,  MAX_WAIT,TIME_WAITED_MICRO,  EVENT_ID,WAIT_CLASS_ID,WAIT_CLASS#,WAIT_CLASS
       153,       153,Disk file operations I/O         ,          4,             0,          0,           0,         0,               76, 166678035,   1740759767,          8,User I/O
       153,       153,Disk file Mirror Read            ,          4,             0,          0,         .04,         0,             1408,  13102552,   1740759767,          8,User I/O
       153,       153,control file sequential read     ,         14,             0,          2,         .12,         1,            16944,3213517201,   4108307767,          9,System I/O
       153,       153,gc cr multi block request        ,        115,             0,          2,         .02,         0,            18459, 661121159,   3871361733,         11,Cluster
       153,       153,gc cr block 2-way                ,         26,             0,          0,         .01,         0,             2589, 737661873,   3871361733,         11,Cluster
       153,       153,gc current block 2-way           ,         27,             0,          0,         .01,         0,             1992, 111015833,   3871361733,         11,Cluster
       153,       153,gc cr grant 2-way                ,          1,             0,          0,         .01,         0,               92,3201690383,   3871361733,         11,Cluster
       153,       153,gc current grant 2-way           ,          5,             0,          0,         .01,         0,              387,2685450749,   3871361733,         11,Cluster
       153,       153,gc current grant busy            ,          2,             0,          0,         .01,         0,              270,2277737081,   3871361733,         11,Cluster
       153,       153,row cache lock                   ,         12,             0,          0,         .01,         0,             1452,1714089451,   3875070507,          4,Concurrency
       153,       153,library cache pin                ,         16,             0,          0,         .01,         0,             1428,2802704141,   3875070507,          4,Concurrency
       153,       153,library cache lock               ,         15,             0,          0,         .01,         0,             2040, 916468430,   3875070507,          4,Concurrency
       153,       153,SQL*Net message to client        ,        125,             0,          0,           0,         0,              120,2067390145,   2000153315,          7,Network
       153,       153,SQL*Net message from client      ,        124,             0,     778694,     6279.79,    153480,       7786936539,1421975091,   2723168908,          6,Idle
       153,       153,SQL*Net break/reset to client    ,         14,             0,          0,           0,         0,              434,1963888671,   4217450380,          1,Application
       153,       153,cell single block physical read  ,          9,             0,          5,          .5,         2,            45231,2614864156,   1740759767,          8,User I/O
       153,       153,cell multiblock physical read    ,         50,             0,         57,        1.15,         5,           574273, 443865681,   1740759767,          8,User I/O

17 rows selected.
```


### example2 
```

    -- get min max snap_id for each dbid for the past 13 months             
    for rec_snap in (select new_dbid, target_name 
                 from dbsnmp.caw_dbid_mapping 
                 where new_dbid in ('2024176565','1890029227','1922913859','1826652812'))
    loop
        insert into plan_table (options, object_node, object_owner, object_name)
               SELECT max(rec_snap.target_name), 
                      max(dbid) awrwh_dbid,  
                      TO_CHAR(MIN(snap_id)) awrwh_min_snap_id, 
                      TO_CHAR(MAX(snap_id)) awrwh_max_snap_id
               FROM dba_hist_snapshot 
               WHERE dbid = rec_snap.new_dbid
               and to_date(to_char(END_INTERVAL_TIME,'MM/DD/YY HH24:MI:SS'),'MM/DD/YY HH24:MI:SS') &amp;gt;=  trunc(add_months(sysdate,-13),'MM');
    end loop;
    
    -- insert record for each dbid using min max snap_id 
    for rec_dbid in (select options target, object_node dbid, object_owner min_snap, object_name max_snap 
                     from plan_table)
    loop 
            insert /*+ PARALLEL(8) */ into daily_cpu_all select /*+ PARALLEL(8) */ * from (
            WITH
            cpuwl AS (
            SELECT /*+ MATERIALIZE NO_MERGE */
                instance_number,
                dbid,
                snap_id,
                SUM(CASE WHEN stat_name = 'RSRC_MGR_CPU_WAIT_TIME' THEN value ELSE 0 END) rsrcmgr,
                SUM(CASE WHEN stat_name = 'LOAD' THEN value ELSE 0 END) loadavg,
                SUM(CASE WHEN stat_name = 'NUM_CPUS' THEN value ELSE 0 END) cpu
            FROM dba_hist_osstat
            WHERE stat_name IN
            ('RSRC_MGR_CPU_WAIT_TIME','LOAD','NUM_CPUS')
            and dbid = rec_dbid.dbid
            and snap_id &amp;gt; rec_dbid.min_snap
            GROUP BY
                instance_number,
                dbid,
                snap_id
            )
            select dbid, instance_number, logdate, logmonth, loghour, max(cpu) cpu, avg(loadavg) loadavg, avg(rsrcmgrpct) rsrcmgrpct  from (
            select a.dbid, a.instance_number, TO_CHAR(a.begin_interval_time,'MM/DD/YY HH24:MI:SS') tm,
                to_char(a.begin_interval_time, 'yyyy-mm-dd') as logdate,
                to_char(a.begin_interval_time, 'mm') as logmonth,
                to_char(a.begin_interval_time, 'hh24') as loghour,
                lag(b.snap_id) over(partition by b.instance_number,b.dbid order by b.snap_id) as snap_id, 
                b.cpu AS cpu,
                round(b.loadavg,2) AS loadavg,
                round((( b.rsrcmgr-lag(b.rsrcmgr) over (partition by b.instance_number,b.dbid order by b.snap_id) ) / 100) / (((CAST(a.end_interval_time AS DATE) - CAST(a.begin_interval_time AS DATE)) * 86400)*b.cpu)*100,2) as rsrcmgrpct
            from dba_hist_snapshot a, cpuwl b
            where a.dbid = b.dbid 
            and a.instance_number = b.instance_number 
            and a.snap_id = b.snap_id)
            group by dbid, instance_number, logdate, logmonth, loghour
        )
        unpivot (value for metric_name in (cpu as 'NUM_CPUS', loadavg as 'LOAD', rsrcmgrpct as 'RSRC_MGR_CPU_WAIT_TIME_PCT'))
        union all
        select /*+ PARALLEL(8) */ dbid, instance_number, logdate, logmonth, loghour, metric_name, avg(value) as avg_hourly from (
        select a.dbid, a.instance_number, TO_CHAR(a.begin_interval_time,'MM/DD/YY HH24:MI:SS') tm,
            to_char(a.begin_interval_time, 'yyyy-mm-dd') as logdate,
            to_char(a.begin_interval_time, 'mm') as logmonth,
            to_char(a.begin_interval_time, 'hh24') as loghour,
            lag(b.snap_id) over(partition by b.metric_name,b.instance_number,b.dbid order by b.snap_id) as snap_id, 
            b.metric_name,
            case when b.metric_name = 'Host CPU Utilization (%)' then 
                case when b.average &amp;lt; 50 then (b.average*1.7)
                else (85+(b.average-50)*0.3)
                end
            when b.metric_name = 'Average Active Sessions' then b.average    
            when b.metric_name = 'Current OS Load' then b.average
            end as value
          from dba_hist_snapshot a, DBA_HIST_SYSMETRIC_SUMMARY b
          where a.dbid = rec_dbid.dbid
          and a.snap_id &amp;gt; rec_dbid.min_snap
          and a.dbid = b.dbid 
          and a.instance_number = b.instance_number 
          and a.snap_id = b.snap_id
          and b.metric_name in ('Host CPU Utilization (%)','Average Active Sessions','Current OS Load')
          ) group by dbid, instance_number, logdate, logmonth, loghour, metric_name 
          order by 3,4,5,6 asc; 

```


&lt;/pre&gt;</description>
<category>..my rewrite examples</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Bnormalized%20to%20unpivot%2C%20multiple%20left%20join%20rewrite%5D%5D</link>
<pubDate>Tue, 06 Apr 2021 04:17:00 GMT</pubDate>

</item>
<item>
<title>data governance</title>
<description></description>
<category>Data Engineering</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Bdata%20governance%5D%5D</link>
<pubDate>Sun, 28 Mar 2021 17:54:00 GMT</pubDate>

</item>
<item>
<title>data lineage and GDPR</title>
<description>&lt;pre&gt;

Amundsen
https://eng.lyft.com/amundsen-lyfts-data-discovery-metadata-engine-62d27254fbb9
https://www.dataengineeringpodcast.com/amundsen-data-discovery-episode-92/
Amundsen: A Data Discovery Platform From Lyft | Lyft https://www.youtube.com/watch?v=EOCYw0yf63k
https://www.amundsen.io/amundsen/


Data Fusion 
https://cloud.google.com/data-fusion/docs/tutorials/lineage



C360 
https://en.wikipedia.org/wiki/Janrain
https://marketingplatform.google.com/about/tag-manager/
https://www.ordergroove.com/home-vb/
https://www.bigcommerce.com/
https://www.lytics.com/
https://segment.com/



DBT 
https://rittmananalytics.com/blog/2020/5/28/introducing-the-ra-warehouse-dbt-framework-how-rittman-analytics-does-data-centralization
https://rittmananalytics.com/blog/tag/dbt
https://blog.getdbt.com/what--exactly--is-dbt-/
https://docs.getdbt.com/docs/building-a-dbt-project/documentation



collibra 
https://marketplace.collibra.com/listings/jdbc-driver-for-oracle/
https://www.collibra.com/



apache atlas 
https://medium.com/google-cloud/a-metadata-comparison-between-apache-atlas-and-google-data-catalog-7e1ad391b4c2
Apache Atlas Introduction: Need for Governance and Metadata management: Vimal Sharma https://www.youtube.com/watch?v=6vNJOHDE15g
https://community.cloudera.com/t5/Community-Articles/Customizing-Atlas-Part1-Model-governance-traceability-and/ta-p/249250

Data Discovery and Lineage: Integrating streaming data in the public cloud with on-prem, classic datastores and heterogeneous schema types
https://conferences.oreilly.com/strata/strata-ny-2018/cdn.oreillystatic.com/en/assets/1/event/278/Data%20discovery%20and%20lineage_%20Integrating%20streaming%20data%20in%20the%20public%20cloud%20with%20on-prem,%20classic%20data%20stores,%20and%20heterogeneous%20schema%20types%20Presentation.pdf
Barbara Eckman, Ph.D.Principal ArchitectComcast
https://conferences.oreilly.com/strata/strata-ny-2018/public/schedule/detail/69518.html
https://learning.oreilly.com/videos/strata-data-conference/9781491976326/9781491976326-video316438?autoplay=false 
https://www.youtube.com/results?search_query=heterogeneous+big+data+environment+with+Apache+Atlas+and+Avro+-+Barbara+Eckman



navigator (precursor to atlas)
https://community.cloudera.com/t5/Support-Questions/Cloudera-Navigator-vs-Apache-Atlas/td-p/297931



gcp data lineage 
https://stackoverflow.com/questions/55000865/how-can-i-perform-data-lineage-in-gcp
https://github.com/GoogleCloudPlatform/datacatalog-connectors-hive/tree/master/google-datacatalog-apache-atlas-connector



spark spline 
https://medium.com/@reenugrewal/data-lineage-tracking-using-spline-on-atlas-via-event-hub-6816be0fd5c7



apache airflow marquez
https://www.dremio.com/subsurface/data-lineage-with-apache-airflow
https://www.slideshare.net/WillyLulciuc/data-lineage-with-apache-airflow-using-marquez
Data Lineage with Apache Airflow | Datakin https://www.youtube.com/watch?v=dfRetdg9444 


airflow with atlas 
https://www.datastackpros.com/2020/04/gcp-cloud-data-lineage-with-airflow.html
https://stackoverflow.com/questions/53539491/how-import-the-lineage-of-airflow-to-the-atlas
https://github.com/apache/airflow/blob/master/docs/apache-airflow/lineage.rst




talend to atlas  
https://help.talend.com/r/TakcAFoOnWMPdNo8XXlPpg/_FqzpSa92Vga9NfumjCM~Q
https://help.talend.com/r/XSofSS9S7oLFhM0dJizFlg/hPYn15mq7Is2544uaVhvxQ



streaming avro schema registry 
https://community.cloudera.com/t5/Community-Articles/Avro-Schema-Registry-with-Apache-Atlas-for-Streaming-Data/ta-p/247037
End to end Data Governance with Apache Avro and Atlas https://www.youtube.com/watch?v=b--xwHHukRA
https://community.cloudera.com/t5/Community-Articles/Apache-Atlas-as-an-Avro-Schema-Registry-Test-Drive/ta-p/247039
https://community.cloudera.com/t5/Community-Articles/Avro-Schema-Registry-with-Apache-Atlas-for-Streaming-Data/ta-p/247037



finos waltz https://www.finos.org/blog/introduction-to-finos-waltz
https://waltz.finos.org/
https://waltz.finos.org/blog/index.html
http://www.waltztechnology.com/measurable-category/4



data lineage GDPR 
https://info.talend.com/rs/talend/images/WP_EN_TLD_Talend_Outlining_PracticalSteps_GDPR_Compliance.pdf
https://www.octopai.com/gdpr-experts/?creative=499030836191&amp;amp;keyword=data%20governance%20data%20lineage&amp;amp;matchtype=b&amp;amp;network=g&amp;amp;device=c&amp;amp;gclid=CjwKCAjwr_uCBhAFEiwAX8YJgf2QLkmBIZu7JRszD2JtmwbbGgwZ6QSGlsB5niAFmAmN_GDmTXWv3hoCS8cQAvD_BwE
https://www.talend.com/resources/gdpr-stitch-data-lineage/
https://www.talend.com/resources/16-step-data-governance-plan-gdpr-compliance/?ty=content
https://www.talend.com/resources/gdpr-govern-analytical-models/
https://www.talend.com/solutions/data-protection-gdpr-compliance/
https://www.slideshare.net/Hadoop_Summit/practical-experiences-using-atlas-and-ranger-to-implement-gdpr
https://theworldofapenguin.blogspot.com/
https://github.com/SvenskaSpel/cobra-policytool
https://github.com/SvenskaSpel/cobra-policytool
















&lt;/pre&gt;</description>
<category>data governance</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Bdata%20lineage%20and%20GDPR%5D%5D</link>
<pubDate>Sun, 28 Mar 2021 17:54:00 GMT</pubDate>

</item>
<item>
<title>utilities datamap book</title>
<description>&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/PDF/MWM_BI_DataMap_2.7.0.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/PDF/MWM_BI_DataMap_2.7.0.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/PDF/MWM_BI_DataMap_2.7.0.pdf&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/PDF/MDM_BI_DataMap_2.7.0.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/PDF/MDM_BI_DataMap_2.7.0.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/PDF/MDM_BI_DataMap_2.7.0.pdf&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/PDF/CCB_BI_DataMap_2.7.0.0.12.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/PDF/CCB_BI_DataMap_2.7.0.0.12.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/PDF/CCB_BI_DataMap_2.7.0.0.12.pdf&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;...</description>
<category>Oracle Utilities Analytics - OBIEE,ODI combo</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Butilities%20datamap%20book%5D%5D</link>
<pubDate>Sun, 28 Mar 2021 17:52:00 GMT</pubDate>

</item>
<item>
<title>CCB - Customer Care and Billing</title>
<description>&lt;ul&gt;&lt;li&gt; Oracle Utilities Customer Care and Billing (CC&amp;amp;B) - utilities companies like DLC&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt; Oracle Utilities (CC&amp;amp;B, MDM, ...) - Develop, Deploy and Debug with Eclipse and the SDK&lt;ul&gt;&lt;li&gt; &lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.youtube.com/watch?v=fuPzFCBEEWg&quot; href=&quot;https://www.youtube.com/watch?v=fuPzFCBEEWg&quot; class=&quot;externalLink&quot;&gt;https://www.youtube.com/watch?v=fuPzFCBEEWg&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; batch &lt;/h1&gt;Oracle Utilities Customer Care And Billing Batch Operations and Configuration Guide &lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E18733_01/pdf/E18372_01.pdf&quot; href=&quot;https://docs.oracle.com/cd/E18733_01/pdf/E18372_01.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E18733_01/pdf/E18372_01.pdf&lt;/a&gt;</description>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BCCB%20-%20Customer%20Care%20and%20Billing%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 03:24:00 GMT</pubDate>

</item>
<item>
<title>ORMB - Oracle Revenue Management and Billing</title>
<description>&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.oracle.com/technical-resources/documentation/fsgbu.html&quot; href=&quot;https://www.oracle.com/technical-resources/documentation/fsgbu.html&quot; class=&quot;externalLink&quot;&gt;https://www.oracle.com/technical-resources/documentation/fsgbu.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; batch stack &lt;/h1&gt;Oracle Revenue Management and Billing  &lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87761_01/homepage.htm&quot; href=&quot;https://docs.oracle.com/cd/E87761_01/homepage.htm&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87761_01/homepage.htm&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87761_01/books/V2.6.0.0.0/Oracle_Revenue_Management_and_Billing_Transaction_Feed_Management_-_Batch_Execution_Guide.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87761_01/books/V2.6.0.0.0/Oracle_Revenue_Management_and_Billing_Transaction_Feed_Management_-_Batch_Execution_Guide.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87761_01/books/V2.6.0.0.0/Oracle_Revenue_Management_and_Billing_Transaction_Feed_Management_-_Batch_Execution_Guide.pdf&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; analytics stack&lt;/h1&gt;Oracle Revenue Management and Billing Analytics &lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E64452_01/homepage.htm&quot; href=&quot;https://docs.oracle.com/cd/E64452_01/homepage.htm&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E64452_01/homepage.htm&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Installation_Guide.pdf&quot; href=&quot;https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Installation_Guide.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Installation_Guide.pdf&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Admin_Guide.pdf&quot; href=&quot;https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Admin_Guide.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E64452_01/books/V2.8.0.0.0/Oracle_Revenue_Management_and_Billing_Analytics_Admin_Guide.pdf&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;.&lt;br&gt;</description>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BORMB%20-%20Oracle%20Revenue%20Management%20and%20Billing%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 03:24:00 GMT</pubDate>

</item>
<item>
<title>OBIEE sizing and tuning</title>
<description>&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blogs.oracle.com/BI4success/entry/high_level_flow_of_obiee&quot; href=&quot;https://blogs.oracle.com/BI4success/entry/high_level_flow_of_obiee&quot; class=&quot;externalLink&quot;&gt;https://blogs.oracle.com/BI4success/entry/high_level_flow_of_obiee&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blogs.oracle.com/obieeTips/entry/aix_checklist_for_stable_obiee&quot; href=&quot;https://blogs.oracle.com/obieeTips/entry/aix_checklist_for_stable_obiee&quot; class=&quot;externalLink&quot;&gt;https://blogs.oracle.com/obieeTips/entry/aix_checklist_for_stable_obiee&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blogs.oracle.com/obieeTips/entry/obiee_memory_usage&quot; href=&quot;https://blogs.oracle.com/obieeTips/entry/obiee_memory_usage&quot; class=&quot;externalLink&quot;&gt;https://blogs.oracle.com/obieeTips/entry/obiee_memory_usage&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; sizing &lt;/h1&gt;OBIEE 11g and 12c: Architectural Deployment Capacity Planning Guide (Doc ID 1323646.1)&lt;br&gt;NOTE:1333049.1 - OBIEE 11g Infrastructure Performance Tuning Guide&lt;br&gt;NOTE:2106183.1 - OBIEE 12c: Best Practices Guide for Infrastructure Tuning Oracle® Business Intelligence Enterprise Edition 12c (12.2.1)&lt;br&gt;NOTE:1323646.1 - OBIEE 11g | 12c: Architectural Deployment Capacity Planning Guide&lt;br&gt;NOTE:2106183.1 - OBIEE 12c: Best Practices Guide for Infrastructure Tuning Oracle® Business Intelligence Enterprise Edition 12c (12.2.1)&lt;br&gt;NOTE:1611188.1 - OBIEE: Load Testing OBIEE Using Oracle Load Testing (OLT) 12.x&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blogs.oracle.com/cealteam/obiee-1111-tuning-guide-script-v1&quot; href=&quot;https://blogs.oracle.com/cealteam/obiee-1111-tuning-guide-script-v1&quot; class=&quot;externalLink&quot;&gt;https://blogs.oracle.com/cealteam/obiee-1111-tuning-guide-script-v1&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://blogs.oracle.com/proactivesupportepm/obiee-tuning-guide-whitepaper-update-available&quot; href=&quot;https://blogs.oracle.com/proactivesupportepm/obiee-tuning-guide-whitepaper-update-available&quot; class=&quot;externalLink&quot;&gt;https://blogs.oracle.com/proactivesupportepm/obiee-tuning-guide-whitepaper-update-available&lt;/a&gt;&lt;br&gt;NOTE:1611188.1 - OBIEE: Load Testing OBIEE Using Oracle Load Testing (OLT) 12.x&lt;br&gt;NOTE:1323646.1 - OBIEE 11g | 12c: Architectural Deployment Capacity Planning Guide&lt;br&gt;NOTE:2087801.1 - OBIEE 12c: How To Configure The External Subject Area (XSA) Cache For Data Blending| Mashup And Performance&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; obiee active data guard&lt;/h1&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-biee-activedataguard-1-131999.pdf&quot; href=&quot;https://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-biee-activedataguard-1-131999.pdf&quot; class=&quot;externalLink&quot;&gt;https://www.oracle.com/technetwork/database/features/availability/maa-wp-11g-biee-activedataguard-1-131999.pdf&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.slideshare.net/bogloap/it-2020-technology-optimism-an-oracle-scenario&quot; href=&quot;https://www.slideshare.net/bogloap/it-2020-technology-optimism-an-oracle-scenario&quot; class=&quot;externalLink&quot;&gt;https://www.slideshare.net/bogloap/it-2020-technology-optimism-an-oracle-scenario&lt;/a&gt;</description>
<category>OBIEE</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BOBIEE%20sizing%20and%20tuning%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 03:21:00 GMT</pubDate>

</item>
<item>
<title>OBIEE</title>
<description>&lt;strong&gt;&lt;span&gt;—&lt;/span&gt; usage tracking&lt;/strong&gt;&lt;br&gt;&lt;pre&gt;$ cat obi_reports.sql
set lines 200
set echo off
set feedback off
col &quot;Elapse Time(Min)&quot; form 999,999
col &quot;Elapse Time(Hr)&quot;  form 999.9
col &quot;Total Row Ct.&quot;    form 999,999,999
col &quot;Exec Ct.&quot;         form 999,999,999
col &quot;SQL Ct.&quot;          form 999,999,999
col &quot;Db Time(Sec)&quot;     form 999,999,999
col &quot;Db Time(Min)&quot;     form 999,999
col &quot;Db Time(Hr)&quot;      form 999.9
col &quot;Total Row Ct.&quot;    form 999,999,999,999

SELECT to_char(to_date(start_dt, 'dd-MON-yy'), 'yyyy-mm-dd') &quot;Exec Date&quot;,
       count(*)                                              &quot;Exec Ct&quot;,
       sum(row_count)                                        &quot;Row Ct&quot;,
       sum(total_time_sec/60)                                &quot;Elapse Time(Min)&quot;,
       sum(total_time_sec/60/60)                             &quot;Elapse Time(Hr)&quot;,
       sum(num_db_query)                                     &quot;SQL Ct.&quot;,
       sum(cum_db_time_sec)                                  &quot;Db Time(Sec)&quot;,
       sum(cum_db_time_sec/60)                               &quot;Db Time(Min)&quot;,
       sum(cum_db_time_sec/60/60)                            &quot;Db Time(Hr)&quot;,
       sum(cum_num_db_row)                                   &quot;Total Row Ct.&quot;
  FROM OBIUSAGE.S_NQ_ACCT
 WHERE 1=1
   AND QUERY_SRC_CD NOT IN ('ValuePrompt','DashboardPrompt')
   AND cache_ind_flg = 'N'
   AND presentation_name = 'CBRE Financials - GL Profit and Loss'
   AND start_dt &amp;gt; = '07-MAY-2012'
 GROUP BY start_dt
 ORDER BY 1;

&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1&gt; OBIEE workload separation&lt;/h1&gt;&lt;pre&gt;IF contains(lower(trim([Module])),'BIP')=true THEN 'BIP'
ELSEIF contains(lower(trim([Module])),'ODI')=true THEN 'ODI'
ELSEIF contains(lower(trim([Module])),'nqs')=true THEN 'nqsserver'
ELSE 'OTHER' END
&lt;/pre&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
<category>DataWarehouse</category>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#OBIEE</link>
<pubDate>Sat, 20 Mar 2021 03:05:00 GMT</pubDate>

</item>
<item>
<title>Oracle Utilities Analytics - OBIEE,ODI combo</title>
<description>&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/index.htm&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/index.htm&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/index.htm&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/PDF/OUA_Developer_Guide_2.7.0.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/PDF/OUA_Developer_Guide_2.7.0.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/PDF/OUA_Developer_Guide_2.7.0.pdf&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://docs.oracle.com/cd/E87041_01/PDF/OUA_Admin_Guide_2.7.0.0.12.pdf&quot; href=&quot;https://docs.oracle.com/cd/E87041_01/PDF/OUA_Admin_Guide_2.7.0.0.12.pdf&quot; class=&quot;externalLink&quot;&gt;https://docs.oracle.com/cd/E87041_01/PDF/OUA_Admin_Guide_2.7.0.0.12.pdf&lt;/a&gt;&lt;br&gt;</description>
<category>CCB - Customer Care and Billing</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BOracle%20Utilities%20Analytics%20-%20OBIEE%2CODI%20combo%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 02:59:00 GMT</pubDate>

</item>
<item>
<title>PeopleSoft</title>
<description>&lt;span&gt;—&lt;/span&gt; CERTIFICATION MATRIX	&lt;br&gt; &lt;br&gt;Operating System, RDBMS &amp;amp; Additional Component Patches Required for Installation &lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; - Master List [ID 756571.1]    ß go here&lt;br&gt;&lt;br&gt;                &lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; Certifications - Suggested Fixes for PT 8.52 Note:1385944.1   ß click on here&lt;br&gt; &lt;br&gt;                                Oracle Server - Enterprise Edition (Doc ID 1100831.1)  ß click on here&lt;br&gt;&lt;br&gt;                                                Required Interim Patches for the Oracle Database with &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; [ID 1100831.1] ß click on here&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise &lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; Certification Table of Contents [ID 759851.1]&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; PERFORMANCE &lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise Performance on Oracle 10g Database (Doc ID 747254.1)&lt;br&gt;&lt;a tiddlylink=&quot;E-ORACLE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-ORACLE&quot; href=&quot;http://karlarao.tiddlyspot.com#E-ORACLE&quot; class=&quot;externalLink null&quot;&gt;E-ORACLE&lt;/a&gt;:10g Master Performance Solution for Oracle 10g (Doc ID 656639.1)&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x: Performance issue while running Paycalc in GP with Oracle 9 and 10 as DB (Doc ID 652910.1)&lt;br&gt;EGP 8.x:Changing Global Payroll COBOL Process without changing delivered code (Doc ID 652805.1)&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&quot; href=&quot;http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&quot; class=&quot;externalLink&quot;&gt;http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;Performance issue with On Lines Pages and Batch Processes on Oracle 10G (Doc ID 651774.1)&lt;br&gt;&lt;br&gt;Performance Issue at Tier Processing (Selection at Database Level) (Doc ID 755402.1)&lt;br&gt;&lt;br&gt;Activity Batch Assignment Performance: Object Where Clause not filtering correct no records (Doc ID 518178.1)&lt;br&gt;&lt;br&gt;Performance and Tuning: Oracle 10g R2 Real Application Cluster (RAC) with &lt;a tiddlylink=&quot;EnterpriseOne&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EnterpriseOne&quot; href=&quot;http://karlarao.tiddlyspot.com#EnterpriseOne&quot; class=&quot;externalLink null&quot;&gt;EnterpriseOne&lt;/a&gt; (Doc ID 748353.1)&lt;br&gt;&lt;br&gt;Performance and Tuning UBE Performance and Tuning (Doc ID 748333.1)&lt;br&gt;&lt;br&gt;Online Performance Configuration Guidelines for &lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; 8.45, 8.46, 8.47, 8.48 and 8.49 (Doc ID 747389.1)&lt;br&gt;&lt;br&gt;Sizing System Hardware for JD Edwards &lt;a tiddlylink=&quot;EnterpriseOne&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EnterpriseOne&quot; href=&quot;http://karlarao.tiddlyspot.com#EnterpriseOne&quot; class=&quot;externalLink null&quot;&gt;EnterpriseOne&lt;/a&gt; (Doc ID 748339.1)&lt;br&gt;&lt;br&gt;E- ORA: Is there any documentation on Oracle 10g RAC implemention in &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt;? (Doc ID 663340.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-INST&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-INST&quot; href=&quot;http://karlarao.tiddlyspot.com#E-INST&quot; class=&quot;externalLink null&quot;&gt;E-INST&lt;/a&gt;: Does &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; support Oracle RAC (Real Application Clusters)? (Doc ID 620325.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-ORA&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-ORA&quot; href=&quot;http://karlarao.tiddlyspot.com#E-ORA&quot; class=&quot;externalLink null&quot;&gt;E-ORA&lt;/a&gt;: Oracle RAC Clusterware support (Doc ID 663690.1)&lt;br&gt;&lt;br&gt;How To Set Up Oracle RAC for Siebel Applications (Doc ID 473859.1)&lt;br&gt;&lt;br&gt;What Are the Supported Oracle Real Application Clusters (RAC) Versions? (Doc ID 478215.1)&lt;br&gt;&lt;br&gt;Oracle 10g RAC support for Analytics (Doc ID 482330.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; Certification &lt;a tiddlylink=&quot;FAQs&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#FAQs&quot; href=&quot;http://karlarao.tiddlyspot.com#FAQs&quot; class=&quot;externalLink null&quot;&gt;FAQs&lt;/a&gt; - Database Platforms - Oracle (Doc ID 756280.1)&lt;br&gt;&lt;br&gt;Siebel Recommendation on table logging (Doc ID 730133.1)&lt;br&gt;&lt;br&gt;What does Siebel recommend for the Oracle parameter &quot;compatible&quot; on 10g database (Doc ID 551979.1)&lt;br&gt;&lt;br&gt;Oracle cluster (Doc ID 522337.1)&lt;br&gt;&lt;br&gt;Support Status for Oracle Business Intelligence on &lt;a tiddlylink=&quot;VMware&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#VMware&quot; href=&quot;http://karlarao.tiddlyspot.com#VMware&quot; class=&quot;externalLink null&quot;&gt;VMware&lt;/a&gt; Virtualized Environments (Doc ID 475484.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-PIA&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-PIA&quot; href=&quot;http://karlarao.tiddlyspot.com#E-PIA&quot; class=&quot;externalLink null&quot;&gt;E-PIA&lt;/a&gt;: Red Paper on Implementing Clustering and High Availability for &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; (Doc ID 612096.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-PIA&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-PIA&quot; href=&quot;http://karlarao.tiddlyspot.com#E-PIA&quot; class=&quot;externalLink null&quot;&gt;E-PIA&lt;/a&gt;: Red Paper on Implementing Clustering and High Availability for &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; (Doc ID 612096.1)&lt;br&gt;&lt;br&gt;747378.1 Clustering and High Availability for Enterprise Tools 8.4x (Doc ID 747378.1)&lt;br&gt;&lt;br&gt;747962.1 &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; EPM Red Paper: &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise Initial Consolidations —04/2007 (Doc ID 747962.1)&lt;br&gt;&lt;br&gt;&lt;br&gt;747962.1 &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; EPM Red Paper: &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise Initial Consolidations&lt;br&gt;&lt;br&gt;747962.1 &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; EPM Red Paper: &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise Initial Consolidations —04/2007 (Doc ID 747962.1)&lt;br&gt;&lt;br&gt;Is there a way to automatically kill long running SQL statements (Oracle DB only) at the database after a pre-determined maximum waiting time ? (Doc ID 753941.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-CERT&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-CERT&quot; href=&quot;http://karlarao.tiddlyspot.com#E-CERT&quot; class=&quot;externalLink null&quot;&gt;E-CERT&lt;/a&gt; Red Hat Linux 4.0 64 bit certification (Doc ID 656686.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise &lt;a tiddlylink=&quot;PeopleTools&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleTools&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleTools&quot; class=&quot;externalLink null&quot;&gt;PeopleTools&lt;/a&gt; Certifications (Doc ID 747587.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Performance on Oracle 10.2.0.2 &lt;a target=&quot;_blank&quot; title=&quot;External link to http://www.freelists.org/post/oracle-l/PeopleSoft-Performance-on-Oracle-10202&quot; href=&quot;http://www.freelists.org/post/oracle-l/PeopleSoft-Performance-on-Oracle-10202&quot; class=&quot;externalLink&quot;&gt;http://www.freelists.org/post/oracle-l/PeopleSoft-Performance-on-Oracle-10202&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; Hidden Parameters&lt;br&gt;&lt;br&gt;_disable_function_based_index&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://www.orafaq.com/parms/parm467.htm&quot; href=&quot;http://www.orafaq.com/parms/parm467.htm&quot; class=&quot;externalLink&quot;&gt;http://www.orafaq.com/parms/parm467.htm&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; SECURITY&lt;br&gt;&lt;br&gt;747524.1 Securing Your &lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Application Environment (Doc ID 747524.1)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; PAYROLL &lt;br&gt;&lt;br&gt;EPY: Performance issue with work table &lt;a tiddlylink=&quot;PS_WRK_SEQ_CHECK&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PS_WRK_SEQ_CHECK&quot; href=&quot;http://karlarao.tiddlyspot.com#PS_WRK_SEQ_CHECK&quot; class=&quot;externalLink null&quot;&gt;PS_WRK_SEQ_CHECK&lt;/a&gt; (Doc ID 646824.1)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dbasrus.blogspot.com/2007/09/more-on-peoplesoft.html&quot; href=&quot;http://dbasrus.blogspot.com/2007/09/more-on-peoplesoft.html&quot; class=&quot;externalLink&quot;&gt;http://dbasrus.blogspot.com/2007/09/more-on-peoplesoft.html&lt;/a&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&quot; href=&quot;http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&quot; class=&quot;externalLink&quot;&gt;http://dbasrus.blogspot.com/2007/09/one-for-peoplesoft-folks.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;EPY: Performance issue with work table &lt;a tiddlylink=&quot;PS_WRK_SEQ_CHECK&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PS_WRK_SEQ_CHECK&quot; href=&quot;http://karlarao.tiddlyspot.com#PS_WRK_SEQ_CHECK&quot; class=&quot;externalLink null&quot;&gt;PS_WRK_SEQ_CHECK&lt;/a&gt; (Doc ID 646824.1)&lt;br&gt;&lt;br&gt;EPY: Performance issue on Pay confirm process &lt;a tiddlylink=&quot;PSPEBUPD_S_BENF_NO&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PSPEBUPD_S_BENF_NO&quot; href=&quot;http://karlarao.tiddlyspot.com#PSPEBUPD_S_BENF_NO&quot; class=&quot;externalLink null&quot;&gt;PSPEBUPD_S_BENF_NO&lt;/a&gt; (Doc ID 660649.1)&lt;br&gt;&lt;br&gt;EPY: COBOL Performance Issues: Paycalc or other COBOL jobs take too long to run (Doc ID 607905.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;E-ORACLE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-ORACLE&quot; href=&quot;http://karlarao.tiddlyspot.com#E-ORACLE&quot; class=&quot;externalLink null&quot;&gt;E-ORACLE&lt;/a&gt;:10g Master Performance Solution for Oracle 10g (Doc ID 656639.1)&lt;br&gt;&lt;br&gt;EPY - Bonus payroll performance slow due to FLSA processing (Doc ID 634806.1)&lt;br&gt;&lt;br&gt;EPY 8.x:Performance issues on Paycalc/Dedcalc in release 8 &lt;a tiddlylink=&quot;SP1&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SP1&quot; href=&quot;http://karlarao.tiddlyspot.com#SP1&quot; class=&quot;externalLink null&quot;&gt;SP1&lt;/a&gt; and above (Doc ID 611138.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;ETL8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#ETL8&quot; href=&quot;http://karlarao.tiddlyspot.com#ETL8&quot; class=&quot;externalLink null&quot;&gt;ETL8&lt;/a&gt;.8/&lt;a tiddlylink=&quot;GP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#GP8&quot; href=&quot;http://karlarao.tiddlyspot.com#GP8&quot; class=&quot;externalLink null&quot;&gt;GP8&lt;/a&gt;.8: Poor Performance GP Payroll Process (GPPDPRUN) modified TL Data (Doc ID 661283.1)&lt;br&gt;&lt;br&gt;EGP: Performance issues with &quot;UNKNOWN&quot; sql statements in timing trace. (Doc ID 657792.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Global Payroll &lt;a tiddlylink=&quot;Off-Cycle&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#Off-Cycle&quot; href=&quot;http://karlarao.tiddlyspot.com#Off-Cycle&quot; class=&quot;externalLink null&quot;&gt;Off-Cycle&lt;/a&gt; Payment Processing (Doc ID 704478.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.X: Global Payroll runs to 'Success' but does not process any data (Doc ID 637945.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x: What are the tables to partition for Global Payroll Stream Processing ? (Doc ID 619386.1)&lt;br&gt;&lt;br&gt;EGP 8.x:Changing Global Payroll COBOL Process without changing delivered code (Doc ID 652805.1)&lt;br&gt;&lt;br&gt;EGP 8.9: Running payslip Generation Process using &lt;a tiddlylink=&quot;SFTP-&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#SFTP-&quot; href=&quot;http://karlarao.tiddlyspot.com#SFTP-&quot; class=&quot;externalLink null&quot;&gt;SFTP-&lt;/a&gt; Global Payroll (Doc ID 652909.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x: Global Payroll Process fails on AIX with 105 Memory allocation error. (Doc ID 656695.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;ETL9&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#ETL9&quot; href=&quot;http://karlarao.tiddlyspot.com#ETL9&quot; class=&quot;externalLink null&quot;&gt;ETL9&lt;/a&gt;.0: AM/&lt;a tiddlylink=&quot;TL9&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#TL9&quot; href=&quot;http://karlarao.tiddlyspot.com#TL9&quot; class=&quot;externalLink null&quot;&gt;TL9&lt;/a&gt;.0: AM absence is doubling quantity when processing time admin. (Doc ID 664004.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x : How to recognize when the Global Payroll is ending in error ? (Doc ID 636120.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x: Performance issue while running Paycalc in GP with Oracle 9 and 10 as DB (Doc ID 652910.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.9/9.0: Is it possible to enable Commitment Reporting on Global Payroll? (Doc ID 662078.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.x: Global Payroll &lt;a tiddlylink=&quot;PayGroup&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PayGroup&quot; href=&quot;http://karlarao.tiddlyspot.com#PayGroup&quot; class=&quot;externalLink null&quot;&gt;PayGroup&lt;/a&gt; sizing recommendation (Doc ID 639164.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Global Payroll COBOL Array Information (Doc ID 701403.1)&lt;br&gt;&lt;br&gt;&lt;a tiddlylink=&quot;EGP8&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#EGP8&quot; href=&quot;http://karlarao.tiddlyspot.com#EGP8&quot; class=&quot;externalLink null&quot;&gt;EGP8&lt;/a&gt;.3SP1 How Far does Retro go back in history? (Doc ID 618944.1)&lt;br&gt;&lt;br&gt;EGP: Deadlock when using streams and partitions (Doc ID 642914.1)&lt;br&gt;&lt;br&gt;E1: 07: Pre-payroll Troubleshooting (Doc ID 625863.1)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; TRIGGER PERFORMANCE ISSUES&lt;br&gt;Performance/Deadlock Issues Caused By SYNCID Database Triggers [ID 1059120.1]&lt;br&gt;&lt;a tiddlylink=&quot;E-WF&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-WF&quot; href=&quot;http://karlarao.tiddlyspot.com#E-WF&quot; class=&quot;externalLink null&quot;&gt;E-WF&lt;/a&gt;: Database Locking Issue on PSSYSTEMID Table, Because of SYNCID Field in PSWORKLILST [ID 619750.1]&lt;br&gt;How Is SYNCID On The &lt;a tiddlylink=&quot;PS_PROJECT&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PS_PROJECT&quot; href=&quot;http://karlarao.tiddlyspot.com#PS_PROJECT&quot; class=&quot;externalLink null&quot;&gt;PS_PROJECT&lt;/a&gt; Record Maintained? [ID 1303668.1]&lt;br&gt;ECRM: Information about the SYNCID field and what is it used for. [ID 614739.1]&lt;br&gt;&lt;a tiddlylink=&quot;PeopleSoft&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#PeopleSoft&quot; href=&quot;http://karlarao.tiddlyspot.com#PeopleSoft&quot; class=&quot;externalLink null&quot;&gt;PeopleSoft&lt;/a&gt; Enterprise DFW &lt;a tiddlylink=&quot;Plug-In&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#Plug-In&quot; href=&quot;http://karlarao.tiddlyspot.com#Plug-In&quot; class=&quot;externalLink null&quot;&gt;Plug-In&lt;/a&gt; - SYNCID Database Trigger Diagnostic Check [ID 1074332.1]&lt;br&gt;TX Transaction and Enq: Tx - Row Lock Contention - Example wait scenarios [ID 62354.1]&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;—&lt;/span&gt; PERFORMANCE INDEXES&lt;br&gt;&lt;a tiddlylink=&quot;E-AWE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-AWE&quot; href=&quot;http://karlarao.tiddlyspot.com#E-AWE&quot; class=&quot;externalLink null&quot;&gt;E-AWE&lt;/a&gt;: Approval Framework Indexes for 9.1 Applications [ID 1289904.1]&lt;br&gt;&lt;a tiddlylink=&quot;E-AWE&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-AWE&quot; href=&quot;http://karlarao.tiddlyspot.com#E-AWE&quot; class=&quot;externalLink null&quot;&gt;E-AWE&lt;/a&gt;: Recommended Indexes for Application Cross Reference (XREF) Tables to Improve Performance of Approval Workflow Engine (AWE) [ID 1328945.1]&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
<category>.MOSNotes</category>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#PeopleSoft</link>
<pubDate>Sat, 20 Mar 2021 02:57:00 GMT</pubDate>

</item>
<item>
<title>E-businessSuite</title>
<description>Installing Oracle Apps 11i&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://avdeo.com/2010/11/01/installing-oracle-apps-11i/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+advait+(IN+ORACLE+MILIEU&quot; href=&quot;http://avdeo.com/2010/11/01/installing-oracle-apps-11i/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+advait+%28IN+ORACLE+MILIEU&quot; class=&quot;externalLink&quot;&gt;http://avdeo.com/2010/11/01/installing-oracle-apps-11i/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+advait+(IN+ORACLE+MILIEU&lt;/a&gt;+...)&lt;br&gt;&lt;br&gt;Virtualizing Oracle &lt;a tiddlylink=&quot;E-Business&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to http://karlarao.tiddlyspot.com#E-Business&quot; href=&quot;http://karlarao.tiddlyspot.com#E-Business&quot; class=&quot;externalLink null&quot;&gt;E-Business&lt;/a&gt; Suite through Oracle VM&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://kyuoracleblog.wordpress.com/2012/08/13/virtualizing-oracle-e-business-suite-through-oracle-vm/&quot; href=&quot;http://kyuoracleblog.wordpress.com/2012/08/13/virtualizing-oracle-e-business-suite-through-oracle-vm/&quot; class=&quot;externalLink&quot;&gt;http://kyuoracleblog.wordpress.com/2012/08/13/virtualizing-oracle-e-business-suite-through-oracle-vm/&lt;/a&gt;</description>
<category>Oracle</category>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#E-businessSuite</link>
<pubDate>Sat, 20 Mar 2021 02:55:00 GMT</pubDate>

</item>
<item>
<title>oracle best of breed enterprise apps</title>
<description></description>
<category>Oracle</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Boracle%20best%20of%20breed%20enterprise%20apps%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 02:55:00 GMT</pubDate>

</item>
<item>
<title>IBM Curam Social Program Management</title>
<description>IBM Cúram Social Program Management 7.0.10 - 7.0.11&lt;br&gt;&lt;br&gt;Batch Streaming Architecture&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1BatchStreamingArchitecture1.html&quot; href=&quot;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1BatchStreamingArchitecture1.html&quot; class=&quot;externalLink&quot;&gt;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1BatchStreamingArchitecture1.html&lt;/a&gt;&lt;br&gt; &lt;br&gt;The Chunker&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Chunker1.html&quot; href=&quot;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Chunker1.html&quot; class=&quot;externalLink&quot;&gt;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Chunker1.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;The Stream&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Stream1.html&quot; href=&quot;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Stream1.html&quot; class=&quot;externalLink&quot;&gt;https://www.ibm.com/support/knowledgecenter/SS8S5A_7.0.11/com.ibm.curam.content.doc/BatchPerformanceMechanisms/c_BATCHPER_Architecture1Stream1.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
<category>Other breed apps</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BIBM%20Curam%20Social%20Program%20Management%5D%5D</link>
<pubDate>Sat, 20 Mar 2021 02:53:00 GMT</pubDate>

</item>
<item>
<title>Other breed apps</title>
<description></description>
<category>oracle best of breed enterprise apps</category>
<link>http://karlarao.tiddlyspot.com#%5B%5BOther%20breed%20apps%5D%5D</link>
<pubDate>Tue, 16 Mar 2021 17:07:00 GMT</pubDate>

</item>
<item>
<title>sqlmonitor - start active, time active</title>
<description>&lt;blockquote&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to https://www.red-gate.com/simple-talk/sql/oracle/execution-plans-part-14-sql-monitoring/&quot; href=&quot;https://www.red-gate.com/simple-talk/sql/oracle/execution-plans-part-14-sql-monitoring/&quot; class=&quot;externalLink&quot;&gt;https://www.red-gate.com/simple-talk/sql/oracle/execution-plans-part-14-sql-monitoring/&lt;/a&gt;&lt;br&gt;&lt;br&gt;the “Start Active” (how many seconds through the execution were we before this operation started) and &lt;br&gt;&lt;br&gt;“Time Active (s)” (for how long was this operation active) give you a little better precision in terms of sequencing.&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;.</description>
<category>RealTimeSQLMonitoring-sql_monitor</category>
<category>Object Name, Access Predicates, Filter Predicates, Projection</category>
<link>http://karlarao.tiddlyspot.com#%5B%5Bsqlmonitor%20-%20start%20active%2C%20time%20active%5D%5D</link>
<pubDate>Tue, 16 Mar 2021 15:15:00 GMT</pubDate>

</item>
</channel>
</rss>